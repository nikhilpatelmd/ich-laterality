---
title: Patients with Left Hemispheric Intracerebral Hemorrhage are Less Likely to Receive Neurosurgical Intervention
author: "Nikhil Patel, MD"
subtitle: Supplementary Appendix
authors:
  - name: Nikhil Patel
    orcid: 0000-0002-3193-8590
    affiliation: Department of Internal Medicine, Wake Forest University School of Medicine
    roles: data analysis, writing
    corresponding: true
  - name: Matt Jaffa
    affiliation: Department of Neurology, University of Connecticut School of Medicine
  - name: Rahul Karamchandani
    affiliation: Department of Neurology, Wake Forest University School of Medicine
  - name: Andrew Asimos
    affiliation: Department of Emergency Medicine, Wake Forest University School of Medicine
  - name: Jonathan Parish
    affiliation: Carolina Neurosurgery & Spine Associates
  - name: Nicholas Allen Morris
    affiliation: Department of Neurology, University of Maryland School of Medicine
date: last-modified
abstract: |
  
table-of-contents: true
toc-title: Contents
---

```{r setup}
#| echo: false
#| output: false

#| echo: false
#| fig-height: 12

library(targets)
library(tidyverse)
library(withr)
library(here)
library(modelsummary)
library(marginaleffects)
library(brms)
library(tidybayes)
library(bayesplot)
library(glue)
library(ggdist)
library(patchwork)
library(tinytable)
library(flextable)


# plot stuff
theme_ich <- function(base_family = "Figtree",
                      base_size = 14) {
  theme_minimal(base_size = base_size) +
    theme(
      text = element_text(lineheight = 2),
      plot.title = element_text(size = rel(1.3), margin = margin(12, 0, 8, 0)),
      plot.subtitle = element_text(size = rel(1.1), margin = margin(4, 0, 0, 0)),
      axis.text.y = element_text(size = rel(0.8)),
      axis.title.y = element_text(size = 12, margin = margin(0, 4, 0, 0)),
      axis.text.x = element_text(size = rel(2)),
      axis.title.x = element_blank(),
      legend.position = "bottom",
      legend.justification = 1,
      panel.grid = element_line(colour = "#F3F4F5"),
      plot.caption = element_text(size = rel(0.8), margin = margin(8, 0, 0, 0)),
      plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm")
    )
}

# visualization function
results_visual <- function(model, title) {
  model <- model
  subtitle <- title

  draws <- model |>
    spread_draws(b_ich_lateralityRight) |>
    mutate(ich_right_or = exp(b_ich_lateralityRight)) |>
    summarize()

  pred <- predictions(model, by = "ich_laterality") |>
    tibble()

  theme_ich <- function(base_family = "Inter",
                        base_size = 14) {
    theme_minimal(base_size = base_size) +
      theme(
        text = element_text(lineheight = 2),
        plot.title = element_text(size = rel(1.3), margin = margin(12, 0, 8, 0)),
        plot.subtitle = element_text(size = rel(1.1), margin = margin(4, 0, 0, 0)),
        axis.text.y = element_text(size = rel(0.8)),
        axis.title.y = element_text(size = 12, margin = margin(0, 4, 0, 0)),
        axis.text.x = element_text(size = rel(2)),
        axis.title.x = element_blank(),
        legend.position = "bottom",
        legend.justification = 1,
        panel.grid = element_line(colour = "#F3F4F5"),
        plot.caption = element_text(size = rel(0.8), margin = margin(8, 0, 0, 0)),
        plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm")
      )
  }

  p1 <- predictions(model, by = "ich_laterality") |>
    posterior_draws() |>
    ggplot(aes(x = draw, fill = ich_laterality)) +
    geom_density(alpha = .7) +
    scale_fill_manual(values = c("#422f05", "#E69F00")) +
    scale_x_continuous(labels = scales::percent) +
    labs(
      title = "Predicted Probability",
      fill = "ICH Laterality",
      y = NULL
    ) +
    theme_ich()

  p2 <- avg_comparisons(model, variables = "ich_laterality") |>
    posterior_draws() |>
    ggplot(aes(x = draw)) +
    geom_density(color = "#422f05", fill = "#E69F00") +
    scale_x_continuous(labels = scales::percent) +
    labs(
      title = "Average Difference between Left vs. Right Hemisphere",
      y = NULL
    ) +
    geom_vline(
      xintercept = 0, linetype = "dashed",
      color = "#999999", linewidth = 1
    ) +
    theme_ich()

  p3 <- model |>
    spread_draws(b_ich_lateralityRight) |>
    mutate(ich_right_or = exp(b_ich_lateralityRight)) |>
    ggplot(aes(ich_right_or)) +
    geom_density(color = "#422f05", fill = "#E69F00") +
    # stat_halfeye(aes(fill_ramp = stat(x > 1), fill = "#E69F00", color = "#422f05")) +
    scale_x_continuous(breaks = seq(0, 3, 0.25)) +
    labs(
      title = "Odds Ratio - Right Hemisphere",
      y = NULL,
      fill = NULL
    ) +
    geom_vline(
      xintercept = 1, linetype = "dashed",
      color = "#999999", linewidth = 1
    ) +
    theme_ich() +
    theme(legend.position = "none")


  total <- p1 / p2 / p3

  final <- total +
    plot_annotation(
      title = glue(subtitle),
      theme = theme(plot.title = element_text(size = rel(2), margin = margin(12, 0, 8, 0)))
    )

  return(final)
}


# load data and models
with_dir(here(), tar_load(ich_aggressive))

```


# Details of Statistical Analysis

## Covariate Selection


```{r dags}
#| echo: false

# dag_aggressive

```


## Prior Distribution Definitions


```{r prior definitions}
#| echo: false
#| output: false

neutral_mean <- 0
neutral_sd <- 0.35
neutral_lower_OR <- exp(neutral_mean - (1.96 * neutral_sd))
neutral_upper_OR <- exp(neutral_mean + (1.96 * neutral_sd))

left_mean <- -0.22
left_sd <- 0.175
left_lower_OR <- exp(left_mean - (1.96 * left_sd))
left_upper_OR <- exp(left_mean + (1.96 * left_sd))

right_mean <- 0.18
right_sd <- 0.175
right_lower_OR <- exp(right_mean - (1.96 * right_sd))
right_upper_OR <- exp(right_mean + (1.96 * right_sd))

```


In defining prior distributions, we generally followed suggestions from previous literature. [@zampieriUsingBayesianMethods2021; @kruschkeBayesianAnalysisReporting2021; @gelmanBayesianWorkflow2020] Specifically, we defined 4 sets of priors for each outcome:

**Neutral prior**: mean of **`r neutral_mean`** and standard deviation of **`r neutral_sd`**, centering around an OR of **`r exp(neutral_mean)`** and 95% of the the probability mass for the OR between **`r round(neutral_lower_OR, digits = 2)`** to **`r round(neutral_upper_OR, digits = 2)`**.
    
**Left hemisphere prior**: mean of **`r left_mean`** and standard deviation of **`r left_sd`**, centering around an OR of **`r round(exp(left_mean), digits = 2)`** and 95% of the the probability mass for the OR between **`r round(left_lower_OR, digits = 2)`** to **`r round(left_upper_OR, digits = 2)`**.

**Right hemisphere prior**: mean of **`r right_mean`** and standard deviation of **`r right_sd`**, centering around an OR of **`r round(exp(right_mean), digits =2)`** and 95% of the the probability mass for the OR between **`r round(right_lower_OR, digits = 2)`** to **`r round(right_upper_OR, digits =2)`**.

**Flat prior**: most mimics a frequentist analysis
    

```{r prior graphical summary}
#| echo: false
#| fig-height: 6

# Return dnorm(x) for 0 < x < 2, and NA for all other x
dnorm_limit <- function(x) {
  y <- dnorm(x)
  y[x < 0] <- NA
  return(y)
}

# ggplot(data = tibble(x = -2:2), aes(x = x)) +
#   geom_function(fun = dnorm, args = list(mean = -20, sd = 0.5), linewidth = 1) +
#   # stat_function(fun = dnorm_limit, geom = "area", color = "orange", alpha = 0.2) +
#   geom_vline(xintercept = -0.22, linetype = "dashed", color = "orange", linewidth = 1) +
#   scale_x_continuous(breaks = seq(-2, 2, 0.5)) +
#   theme_ich()

```


### Neurosurgical Intervention


```{r informative prior predictive check - neurosurgical intervention}
#| echo: false
#| fig-height: 12

with_dir(here(), tar_load(m_prior_neutral_neurosurgery))
with_dir(here(), tar_load(m_prior_left_neurosurgery))
with_dir(here(), tar_load(m_prior_right_neurosurgery))
with_dir(here(), tar_load(m_prior_flat_neurosurgery))

models <- list(
  "Neutral Prior" = with_dir(here(), tar_read(m_prior_neutral_neurosurgery)),
  "Left Hemisphere Prior" = with_dir(here(), tar_read(m_prior_left_neurosurgery)),
  "Right Hemisphere Prior" = with_dir(here(), tar_read(m_prior_right_neurosurgery)),
  "Flat Prior" = with_dir(here(), tar_read(m_prior_flat_neurosurgery))
)

# gather summary variables for each model
neutral <- models$"Neutral Prior" |>
  spread_draws(b_ich_lateralityRight) |>
  mutate(ich_right_or = exp(b_ich_lateralityRight)) |>
  summarize(
    aor = quantile(ich_right_or, 0.5),
    lower_ci = quantile(ich_right_or, 0.025),
    upper_ci = quantile(ich_right_or, 0.975),
    or_1 = round(sum(ich_right_or > 1) / n(), digits = 2),
    or_1.1 = round(sum(ich_right_or > 1.1) / n(), digits = 2),
    or_1.2 = round(sum(ich_right_or > 1.2) / n(), digits = 2),
    rope = round(sum(ich_right_or > 1.05 | ich_right_or < 0.95) / n(), digits = 2)
  )

left <- models$"Left Hemisphere Prior" |>
  spread_draws(b_ich_lateralityRight) |>
  mutate(ich_right_or = exp(b_ich_lateralityRight)) |>
  summarize(
    aor = quantile(ich_right_or, 0.5),
    lower_ci = quantile(ich_right_or, 0.025),
    upper_ci = quantile(ich_right_or, 0.975),
    or_1 = round(sum(ich_right_or > 1) / n(), digits = 2),
    or_1.1 = round(sum(ich_right_or > 1.1) / n(), digits = 2),
    or_1.2 = round(sum(ich_right_or > 1.2) / n(), digits = 2),
    rope = round(sum(ich_right_or > 1.05 | ich_right_or < 0.95) / n(), digits = 2)
  )

right <- models$"Right Hemisphere Prior" |>
  spread_draws(b_ich_lateralityRight) |>
  mutate(ich_right_or = exp(b_ich_lateralityRight)) |>
  summarize(
    aor = quantile(ich_right_or, 0.5),
    lower_ci = quantile(ich_right_or, 0.025),
    upper_ci = quantile(ich_right_or, 0.975),
    or_1 = round(sum(ich_right_or > 1) / n(), digits = 2),
    or_1.1 = round(sum(ich_right_or > 1.1) / n(), digits = 2),
    or_1.2 = round(sum(ich_right_or > 1.2) / n(), digits = 2),
    rope = round(sum(ich_right_or > 1.05 | ich_right_or < 0.95) / n(), digits = 2)
  )

flat <- models$"Flat Prior" |>
  spread_draws(b_ich_lateralityRight) |>
  mutate(ich_right_or = exp(b_ich_lateralityRight)) |>
  summarize(
    aor = quantile(ich_right_or, 0.5),
    lower_ci = quantile(ich_right_or, 0.025),
    upper_ci = quantile(ich_right_or, 0.975),
    or_1 = round(sum(ich_right_or > 1) / n(), digits = 2),
    or_1.1 = round(sum(ich_right_or > 1.1) / n(), digits = 2),
    or_1.2 = round(sum(ich_right_or > 1.2) / n(), digits = 2),
    rope = round(sum(ich_right_or > 1.05 | ich_right_or < 0.95) / n(), digits = 2)
  )


# add prior predictions
neutral_predictions <-
  as_tibble(avg_predictions(m_prior_neutral_neurosurgery, by = "ich_laterality")) |>
  mutate("Prior Model" = "Neutral Prior") |>
  select(c("Prior Model", ich_laterality, estimate)) |>
  pivot_wider(names_from = ich_laterality, values_from = estimate) |>
  mutate(
    Left = num(Left, label = "%", scale = 100),
    Right = num(Right, label = "%", scale = 100)
  )

left_predictions <-
  as_tibble(avg_predictions(m_prior_left_neurosurgery, by = "ich_laterality")) |>
  mutate("Prior Model" = "Left Hemisphere Prior") |>
  select(c("Prior Model", ich_laterality, estimate)) |>
  pivot_wider(names_from = ich_laterality, values_from = estimate) |>
  mutate(
    Left = num(Left, label = "%", scale = 100),
    Right = num(Right, label = "%", scale = 100)
  )

right_predictions <-
  as_tibble(avg_predictions(m_prior_right_neurosurgery, by = "ich_laterality")) |>
  mutate("Prior Model" = "Right Hemisphere Prior") |>
  select(c("Prior Model", ich_laterality, estimate)) |>
  pivot_wider(names_from = ich_laterality, values_from = estimate) |>
  mutate(
    Left = num(Left, label = "%", scale = 100),
    Right = num(Right, label = "%", scale = 100)
  )

flat_predictions <-
  as_tibble(avg_predictions(m_prior_flat_neurosurgery, by = "ich_laterality")) |>
  mutate("Prior Model" = "Flat Prior") |>
  select(c("Prior Model", ich_laterality, estimate)) |>
  pivot_wider(names_from = ich_laterality, values_from = estimate) |>
  mutate(
    Left = num(Left, label = "%", scale = 100),
    Right = num(Right, label = "%", scale = 100)
  )

all_predictions <- rbind(neutral_predictions, left_predictions, right_predictions, flat_predictions)

prior_prediction_summary <- left_join(all_predictions, table_almost_2, by = "Prior Model")

prior_prediction_summary |>
  gt() |>
  fmt_number(
    columns = 5:7,
    decimals = 2
  )

```


## Posterior Simulation Diagnostics

### MCMC Chain Convergence and Resolution

### Posterior predictive checks

### 

## Sensitivity Analyses


