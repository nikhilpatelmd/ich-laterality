---
title: "Outcomes"
code-fold: true
---

```{r setup, warning=FALSE, message=FALSE}

library(tidyverse)
library(marginaleffects)
library(brms)
library(cmdstanr)
library(tidybayes)
library(parameters)
library(broom)
library(broom.mixed)
library(ggdist)
library(here)

# seeds
set.seed(160)
BAYES_SEED <- 160

# Bayes
options(
  mc.cores = parallel::detectCores(),
  brms.backend = "cmdstanr"
)

data <- read_rds(here("data", "all.rds"), refhook = NULL)

data <- data |>
  filter(ich_location == "Basal Ganglia" | ich_location == "Thalamus" | ich_location == "Lobar") |>
  select(study, age, ich_laterality, ich_location, ich_volume_baseline, gcs_baseline, ivh, neurosurgery_evac, sbp_baseline, mrs_90_01, mrs_90_02, mrs_90_03, mrs_90_04, mrs_90) |>
  drop_na(ich_laterality)

data$ich_location <- fct_drop(data$ich_location)
data$ich_laterality <- fct_drop(data$ich_laterality)

data_erich_atach <- data |>
  filter(study == "ERICH" | study == "ATACH2")

# plot stuff
theme_set(theme_minimal(base_family = "Noah"))

```

We will first run a "dummy" regression so I can interpret the results even before all data is cleaned. 

```{r brms priors}

priors <- c(
  prior(normal(0, 10), class = "b")
)

mod_mrs_90 <- brm(
  mrs_90 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac,
  data = data,
  family = cumulative(link = "logit"),
  prior = priors,
  chains = 4,
  iter = 5000 * 2,
  seed = BAYES_SEED,
  refresh = 0
)

pp_check(mod_mrs_90, type = "bars", ndraws = 100)
pp_check(mod_mrs_90, type = "ecdf_overlay", ndraws = 100)

model_parameters(mod_mrs_90,
  centrality = "mean", dispersion = TRUE,
  test = FALSE, verbose = FALSE, ci_method = "hdi", priors = TRUE,
  exponentiate = TRUE
) |>
  print(digits = 3, zap_small = TRUE)

get_variables(mod_mrs_90)

draws <- mod_mrs_90 |>
  spread_draws(b_ich_lateralityRight) |>
  mutate(ich_right_OR = exp(b_ich_lateralityRight))

draws |>
  ggplot(aes(x = ich_right_OR)) +
  stat_halfeye(aes(fill_ramp = stat(x > 1), fill = "green"))

# Find the proportion of posterior draws that are bigger than OR of 1
draws %>%
  summarize(prop_greater_0 = sum(ich_right_OR > 1) / n())

# Find the proportion of posterior draws that are bigger than OR of 1.2
draws %>%
  summarize(prop_greater_0 = sum(ich_right_OR > 1.2) / n())


```

