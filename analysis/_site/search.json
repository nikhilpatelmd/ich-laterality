[
  {
    "objectID": "clean.html",
    "href": "clean.html",
    "title": "Process and Clean Data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(patchwork)\nlibrary(here)\nlibrary(tableone)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(broom)\n\nData has been cleaned and merged elsewhere.\n\ndata &lt;- read_csv(here(\"data\", \"all.csv\"))\n\nRows: 5147 Columns: 185\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (48): patient_id, sex, race, location_90, location_180, location_365, ...\ndbl  (110): age, gcs_baseline, sbp_baseline, dbp_baseline, ich_volume_baseli...\nlgl   (20): mrs_30_01, mrs_30_02, mrs_30_03, mrs_30_04, mrs_90_01, mrs_90_02...\ndttm   (6): symptom_onset_date_time, ed_date_time, neurosurgery_evac_date_ti...\ndate   (1): death_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# converting some columns to factors\nfactors &lt;- c(\"sex\", \"race\", \"euro_mobility_90\", \"euro_mobility_180\", \"euro_mobility_365\", \"euro_selfcare_90\", \"euro_selfcare_180\", \"euro_selfcare_365\", \"euro_usual_90\", \"euro_usual_180\", \"euro_usual_365\", \"euro_pain_90\", \"euro_pain_180\", \"euro_pain_365\", \"euro_anxiety_90\", \"euro_anxiety_180\", \"euro_anxiety_365\", \"location_90\", \"location_180\", \"location_365\", \"ethnicity\", \"stroke\", \"cad\", \"chf\", \"afib\", \"pvd\", \"hld\", \"dm2\", \"tobacco\", \"htn_meds\", \"dm2_meds\", \"ich_location\", \"ich_laterality\", \"ivh\", \"evd\", \"neurosurgery_evac\", \"tracheostomy\", \"peg\", \"dnr_binary\", \"dni_binary\", \"comfort_care_binary\", \"mrs_90\", \"mrs_180\", \"mrs_365\", \"euroqol_90_assessment_source\", \"euroqol_180_assessment_source\", \"euroqol_365_assessment_source\", \"euro_mobility_365_binary\", \"euro_selfcare_365_binary\", \"euro_usual_365_binary\", \"euro_pain_365_binary\", \"euro_anxiety_365_binary\", \"study\", \"enrolling_country\", \"treatment_group\", \"euro_mobility_90_binary\", \"euro_selfcare_90_binary\", \"euro_usual_90_binary\", \"euro_pain_90_binary\", \"euro_anxiety_90_binary\", \"cocaine\", \"anticoagulated\", \"etoh\", \"mrs_270\", \"location_30\")\n\ndata &lt;- data |&gt;\n  mutate_at(factors, factor)\n\nglimpse(data)\n\nRows: 5,147\nColumns: 185\n$ patient_id                    &lt;chr&gt; \"00003536\", \"00008087\", \"00047804\", \"000…\n$ age                           &lt;dbl&gt; 85, 54, 71, 55, 68, 55, 51, 43, 60, 38, …\n$ sex                           &lt;fct&gt; Female, Male, Male, Female, Female, Male…\n$ race                          &lt;fct&gt; White, White, White, Black or African-Am…\n$ gcs_baseline                  &lt;dbl&gt; 15, 15, 15, 15, 15, 3, NA, 14, 14, 8, 3,…\n$ sbp_baseline                  &lt;dbl&gt; 180, 220, 163, 240, 149, 227, NA, 133, N…\n$ dbp_baseline                  &lt;dbl&gt; 110, 155, 102, 178, 65, 98, NA, 91, NA, …\n$ ich_volume_baseline           &lt;dbl&gt; 42.066, 16.654, 2.999, 9.690, 15.434, 1.…\n$ ivh_volume_baseline           &lt;dbl&gt; 7.427, 0.000, 0.000, 1.289, 0.000, 0.000…\n$ evd_day                       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ euro_mobility_90              &lt;fct&gt; NA, 1, 1, 2, 3, 1, 1, 1, 1, 2, 2, 1, 1, …\n$ euro_mobility_180             &lt;fct&gt; 2, 1, 1, 2, 3, 1, 1, 1, 1, 2, NA, 1, 2, …\n$ euro_mobility_365             &lt;fct&gt; 2, 1, 1, NA, 3, 1, 1, 1, 1, 2, 3, 1, 2, …\n$ euro_selfcare_90              &lt;fct&gt; NA, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, …\n$ euro_selfcare_180             &lt;fct&gt; 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, NA, 1, 2, …\n$ euro_selfcare_365             &lt;fct&gt; 2, 1, 1, NA, 2, 1, 1, 1, 1, 2, 3, 1, 1, …\n$ euro_usual_90                 &lt;fct&gt; NA, 2, 1, 2, 3, 1, 1, 1, 2, 1, 2, 2, 2, …\n$ euro_usual_180                &lt;fct&gt; 2, 1, 1, 2, 3, 1, 1, 1, 2, 2, NA, 2, 3, …\n$ euro_usual_365                &lt;fct&gt; 2, 1, 1, NA, 3, 1, 1, 1, 2, 2, 3, 2, 2, …\n$ euro_pain_90                  &lt;fct&gt; NA, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 2, …\n$ euro_pain_180                 &lt;fct&gt; 2, 2, 1, 1, 3, 2, 1, 1, 2, 2, NA, 1, 1, …\n$ euro_pain_365                 &lt;fct&gt; 2, 2, 1, NA, 2, 2, 1, 1, 1, 1, 3, 1, 1, …\n$ euro_anxiety_90               &lt;fct&gt; NA, 1, 1, 1, 3, 2, 1, 1, 2, 2, 1, 1, 1, …\n$ euro_anxiety_180              &lt;fct&gt; 2, 1, 1, 1, 2, 2, 1, 1, 3, 1, NA, 1, 2, …\n$ euro_anxiety_365              &lt;fct&gt; 2, 1, 1, NA, 2, 1, 1, 1, 2, 3, 1, 1, 1, …\n$ euro_vas_90                   &lt;dbl&gt; NA, 90, 95, 80, 5, 50, 95, 70, 90, 80, 7…\n$ euro_vas_180                  &lt;dbl&gt; 70, 95, 90, 95, 75, 75, 98, 80, 65, 90, …\n$ euro_vas_365                  &lt;dbl&gt; 70, 90, 90, NA, 20, 75, 100, 90, NA, 80,…\n$ barthel_feeding_90            &lt;dbl&gt; NA, 10, 10, 10, 5, 10, 10, 10, 10, 10, 1…\n$ barthel_feeding_180           &lt;dbl&gt; 5, 10, 10, 10, 5, 10, 10, 10, 10, 10, NA…\n$ barthel_feeding_365           &lt;dbl&gt; 10, 10, 10, NA, 5, 10, 10, 10, 10, 10, 5…\n$ barthel_bathing_90            &lt;dbl&gt; NA, 5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 0, …\n$ barthel_bathing_180           &lt;dbl&gt; 0, 5, 5, 5, 0, 5, 5, 5, 5, 5, NA, 5, 0, …\n$ barthel_bathing_365           &lt;dbl&gt; 0, 5, 5, NA, 0, 5, 5, 5, 5, 0, 0, 5, 5, …\n$ barthel_grooming_90           &lt;dbl&gt; NA, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, …\n$ barthel_grooming_180          &lt;dbl&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, NA, 5, 5, …\n$ barthel_grooming_365          &lt;dbl&gt; 0, 5, 5, NA, 5, 5, 5, 5, 5, 5, 0, 5, 5, …\n$ barthel_dressing_90           &lt;dbl&gt; NA, 10, 10, 10, 5, 10, 10, 10, 10, 5, 5,…\n$ barthel_dressing_180          &lt;dbl&gt; 5, 10, 10, 10, 5, 10, 10, 10, 10, 10, NA…\n$ barthel_dressing_365          &lt;dbl&gt; 0, 10, 10, NA, 5, 10, 10, 10, 10, 5, 0, …\n$ barthel_bowels_90             &lt;dbl&gt; NA, 10, 10, 10, 5, 10, 10, 10, 10, 10, 1…\n$ barthel_bowels_180            &lt;dbl&gt; 5, 10, 10, 10, 0, 10, 10, 10, 10, 10, NA…\n$ barthel_bowels_365            &lt;dbl&gt; 5, 10, 10, NA, 0, 10, 10, 10, 10, 10, 10…\n$ barthel_bladder_90            &lt;dbl&gt; NA, 10, 10, 10, 5, 10, 10, 10, 10, 10, 1…\n$ barthel_bladder_180           &lt;dbl&gt; 5, 10, 10, 10, 0, 10, 10, 10, 10, 10, NA…\n$ barthel_bladder_365           &lt;dbl&gt; 5, 10, 10, NA, 0, 10, 10, 10, 10, 10, 10…\n$ barthel_toilet_90             &lt;dbl&gt; NA, 10, 10, 10, 0, 10, 10, 10, 10, 10, 5…\n$ barthel_toilet_180            &lt;dbl&gt; 10, 10, 10, 10, 0, 10, 10, 10, 10, 10, N…\n$ barthel_toilet_365            &lt;dbl&gt; 5, 10, 10, NA, 0, 10, 10, 10, 10, 5, 5, …\n$ barthel_transfer_90           &lt;dbl&gt; NA, 15, 15, 15, 5, 15, 15, 15, 15, 15, 5…\n$ barthel_transfer_180          &lt;dbl&gt; 15, 15, 15, 15, 5, 15, 15, 15, 15, 15, N…\n$ barthel_transfer_365          &lt;dbl&gt; 10, 15, 15, NA, 5, 15, 15, 15, 15, 10, 5…\n$ barthel_mobility_90           &lt;dbl&gt; NA, 15, 15, 15, 0, 15, 15, 15, 15, 10, 5…\n$ barthel_mobility_180          &lt;dbl&gt; 5, 15, 15, 15, 0, 15, 15, 15, 15, 15, NA…\n$ barthel_mobility_365          &lt;dbl&gt; 5, 15, 15, NA, 0, 15, 15, 15, 15, 5, 0, …\n$ barthel_stairs_90             &lt;dbl&gt; NA, 10, 10, 5, 0, 10, 10, 10, 10, 5, 0, …\n$ barthel_stairs_180            &lt;dbl&gt; 0, 10, 10, 5, 0, 10, 10, 10, 0, 5, NA, 1…\n$ barthel_stairs_365            &lt;dbl&gt; 5, 10, 10, NA, 0, 10, 10, 10, 10, 0, 0, …\n$ barthel_total_90              &lt;dbl&gt; NA, 100, 100, 95, 25, 100, 100, 100, 100…\n$ barthel_total_180             &lt;dbl&gt; 55, 100, 100, 95, 20, 100, 100, 100, 90,…\n$ barthel_total_365             &lt;dbl&gt; 45, 100, 100, NA, 20, 100, 100, 100, 100…\n$ location_90                   &lt;fct&gt; NA, Home, Home, Home, Rehab Facility, Ho…\n$ location_180                  &lt;fct&gt; Long-Term Care Facility, Home, Home, Hom…\n$ location_365                  &lt;fct&gt; NA, Home, Home, NA, Home, Home, Home, Ho…\n$ ethnicity                     &lt;fct&gt; Unknown/Not Reported, Not Hispanic or La…\n$ stroke                        &lt;fct&gt; No, No, Yes, No, Yes, No, No, Yes, No, N…\n$ cad                           &lt;fct&gt; No, No, No, No, No, No, No, No, Yes, No,…\n$ chf                           &lt;fct&gt; Yes, No, No, No, No, No, No, No, Yes, No…\n$ afib                          &lt;fct&gt; Yes, No, No, No, No, No, No, No, No, No,…\n$ pvd                           &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, …\n$ hld                           &lt;fct&gt; Yes, No, Yes, No, Yes, No, Yes, No, Yes,…\n$ dm2                           &lt;fct&gt; No, No, No, No, Yes, No, Yes, Yes, Yes, …\n$ tobacco                       &lt;fct&gt; No, No, No, No, No, No, Yes, Yes, No, No…\n$ htn_meds                      &lt;fct&gt; Yes, No, No, Yes, Yes, Yes, No, Yes, Yes…\n$ dm2_meds                      &lt;fct&gt; No, No, No, No, Yes, No, Yes, Yes, Yes, …\n$ symptom_onset_date_time       &lt;dttm&gt; 2011-01-01 05:00:00, 2012-01-01 05:00:0…\n$ ed_date_time                  &lt;dttm&gt; 2011-01-02 15:00:00, NA, 2013-01-01 15:…\n$ time_symptoms_to_ed           &lt;dbl&gt; 2040, NA, 600, 60, 60, NA, NA, 1260, NA,…\n$ ich_location                  &lt;fct&gt; Lobar, Basal Ganglia, Basal Ganglia, Tha…\n$ ich_laterality                &lt;fct&gt; Right, Right, Right, Right, Left, Left, …\n$ ivh                           &lt;fct&gt; Yes, No, No, Yes, No, No, No, Yes, Yes, …\n$ evd                           &lt;fct&gt; No, No, No, No, No, No, No, No, No, Yes,…\n$ neurosurgery_evac             &lt;fct&gt; No, No, No, No, No, No, Yes, No, Yes, Ye…\n$ neurosurgery_evac_date_time   &lt;dttm&gt; NA, NA, NA, NA, NA, NA, 2014-01-03 02:0…\n$ neurosurgery_evac_hour        &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ neurosurgery_evac_day         &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ tracheostomy                  &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, …\n$ peg                           &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, …\n$ dnr_binary                    &lt;fct&gt; Yes, No, No, No, No, No, No, No, No, NA,…\n$ dni_binary                    &lt;fct&gt; Yes, No, No, No, No, No, No, No, No, NA,…\n$ comfort_care_binary           &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, …\n$ dnr_date_time                 &lt;dttm&gt; 2011-01-13 17:00:00, NA, NA, NA, NA, NA…\n$ dni_date_time                 &lt;dttm&gt; 2011-01-13 17:00:00, NA, NA, NA, NA, NA…\n$ comfort_care_date_time        &lt;dttm&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ dnr_hour                      &lt;dbl&gt; 266, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ dnr_day                       &lt;dbl&gt; 12, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ dni_hour                      &lt;dbl&gt; 266, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ dni_day                       &lt;dbl&gt; 12, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ comfort_care_hour             &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ comfort_care_day              &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ death_date                    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ death_day                     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_90                        &lt;fct&gt; NA, 2, 1, 2, 4, 1, 1, 1, 3, 2, 4, 2, 2, …\n$ mrs_180                       &lt;fct&gt; 3, 1, 1, 2, 4, 1, 1, 0, 3, 3, NA, 2, 4, …\n$ mrs_365                       &lt;fct&gt; 4, 1, 1, NA, 4, 1, 1, 0, 2, 4, 4, 2, 2, …\n$ euroqol_90_assessment_source  &lt;fct&gt; NA, Other, Other, Caregiver, NA, Other, …\n$ euroqol_180_assessment_source &lt;fct&gt; Caregiver, Other, Other, Caregiver, NA, …\n$ euroqol_365_assessment_source &lt;fct&gt; Caregiver, Other, Other, NA, NA, NA, Oth…\n$ euro_mobility_365_binary      &lt;fct&gt; 1, 0, 0, NA, 1, 0, 0, 0, 0, 1, 1, 0, 1, …\n$ euro_selfcare_365_binary      &lt;fct&gt; 1, 0, 0, NA, 1, 0, 0, 0, 0, 1, 1, 0, 0, …\n$ euro_usual_365_binary         &lt;fct&gt; 1, 0, 0, NA, 1, 0, 0, 0, 1, 1, 1, 1, 1, …\n$ euro_pain_365_binary          &lt;fct&gt; 1, 1, 0, NA, 1, 1, 0, 0, 0, 0, 1, 0, 0, …\n$ euro_anxiety_365_binary       &lt;fct&gt; 1, 0, 0, NA, 1, 0, 0, 0, 1, 1, 0, 0, 0, …\n$ study                         &lt;fct&gt; ERICH, ERICH, ERICH, ERICH, ERICH, ERICH…\n$ enrolling_country             &lt;fct&gt; United States, United States, United Sta…\n$ symptom_onset                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ arrival_time_initial          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ arrival_time_stroke_center    &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ days_mechanical_ventilation   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ days_EVD                      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ extubation_day                &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ trach_day                     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ nsgy_evac_day                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ icu_los                       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ hospital_los                  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ eq_index_90                   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ study_end                     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ study_end_day                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ site_id                       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ treatment_group               &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ htn                           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ nihss_baseline                &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ nihss_24hours                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ hydrocephalus                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ phe_volume_baseline           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ midline_shift_pineal_baseline &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ midline_shift_septum_baseline &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ich_volume_24hours            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ivh_volume_24hours            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ phe_volume_24hours            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ midline_shift_pineal_24hours  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ midline_shift_septum_24hours  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ patient_died                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_30                        &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ euroqol_assessment_source     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ euro_mobility_90_binary       &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ euro_selfcare_90_binary       &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ euro_usual_90_binary          &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ euro_pain_90_binary           &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ euro_anxiety_90_binary        &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ hospital_discarge_dispo       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ cocaine                       &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ anticoagulated                &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ total_doses                   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ time_last_to_first_dose       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ ventillation_events           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ studyname.y                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ patient_status_30             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ gose_30                       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ patient_status_180            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ gose_180                      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ etoh                          &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ hld_meds                      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_270                       &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ location_30                   &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_30_01                     &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_30_02                     &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_30_03                     &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_30_04                     &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_90_01                     &lt;lgl&gt; NA, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ mrs_90_02                     &lt;lgl&gt; NA, TRUE, FALSE, TRUE, TRUE, FALSE, FALS…\n$ mrs_90_03                     &lt;lgl&gt; NA, FALSE, FALSE, FALSE, TRUE, FALSE, FA…\n$ mrs_90_04                     &lt;lgl&gt; NA, FALSE, FALSE, FALSE, TRUE, FALSE, FA…\n$ mrs_180_01                    &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n$ mrs_180_02                    &lt;lgl&gt; TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, F…\n$ mrs_180_03                    &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, TRUE, FALSE, …\n$ mrs_180_04                    &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, TRUE, FALSE,…\n$ mrs_270_01                    &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_270_02                    &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_270_03                    &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_270_04                    &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mrs_365_01                    &lt;lgl&gt; TRUE, TRUE, TRUE, NA, TRUE, TRUE, TRUE, …\n$ mrs_365_02                    &lt;lgl&gt; TRUE, FALSE, FALSE, NA, TRUE, FALSE, FAL…\n$ mrs_365_03                    &lt;lgl&gt; TRUE, FALSE, FALSE, NA, TRUE, FALSE, FAL…\n$ mrs_365_04                    &lt;lgl&gt; TRUE, FALSE, FALSE, NA, TRUE, FALSE, FAL…"
  },
  {
    "objectID": "dag.html",
    "href": "dag.html",
    "title": "Causal Assumptions - DAG",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(dagitty)\nlibrary(ggdag)\nlibrary(MetBrewer)\nlibrary(here)\nlibrary(broom) # For converting model output to data frames\n\n# set theme of all DAGs to `theme_dag()`\ntheme_set(theme_dag(base_family = \"Cantarell\"))"
  },
  {
    "objectID": "dag.html#specify-a-causal-question",
    "href": "dag.html#specify-a-causal-question",
    "title": "Causal Assumptions - DAG",
    "section": "Specify a Causal Question",
    "text": "Specify a Causal Question\nDo patients with left hemispheric injuries have worse otucomes as compared to patients with right hemispheric injuries?"
  },
  {
    "objectID": "dag.html#exploratory-data-analysis",
    "href": "dag.html#exploratory-data-analysis",
    "title": "Causal Assumptions - DAG",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\n\nCode\ndata <- read_csv(here(\"data\", \"all.csv\"))\n\ndata |>\n  filter(ich_location == c(\"Lobar\", \"Basal Ganglia\", \"Thalamus\")) |>\n  filter(!is.na(ich_laterality)) |>\n  ggplot(aes(euro_vas_90, fill = ich_laterality)) +\n  geom_density(color = NA, alpha = .8)"
  },
  {
    "objectID": "dag.html#model-our-assumptions",
    "href": "dag.html#model-our-assumptions",
    "title": "Causal Assumptions - DAG",
    "section": "Model Our Assumptions",
    "text": "Model Our Assumptions\n\n\nCode\n# original DAG: dagitty.net/mcLgZ8X, pw: CDKM93kbXs\n\nnode_details <- tribble(\n  ~name, ~label, ~x, ~y,\n  \"functional_disability\", \"Functional Disability\", 4, 1,\n  \"ich_laterality\", \"Hemispheric Laterality\", 1, 1,\n  \"age\", \"Age\", 2.75, 3,\n  \"ich_location\", \"ICH Location\", 2, 2.75,\n  \"ich_volume\", \"ICH Volume\", 1, 2.75,\n  \"ivh\", \"IVH\", 1.5, 2.25,\n  \"gcs_baseline\", \"Admission GCS\", 2, 3.25,\n  \"wlst\", \"Early WLST\", 3.75, 2.25,\n  \"neurosurgery\", \"Neurosurgery\", 2, 1.5,\n)\n\nnode_labels <- node_details$label\nnames(node_labels) <- node_details$name\n\nich_dag <- dagify(\n  functional_disability ~ ich_laterality + age + ich_location + ich_volume + ivh + gcs_baseline + wlst + neurosurgery,\n  neurosurgery ~ ich_laterality + age + ich_location + gcs_baseline,\n  wlst ~ age + ich_location + gcs_baseline + ich_volume + ivh,\n  gcs_baseline ~ age + ich_location + ich_volume + ivh,\n  ich_location ~ age,\n  ivh ~ ich_location,\n  exposure = \"ich_laterality\",\n  outcome = \"functional_disability\",\n  coords = node_details,\n  labels = node_labels\n)\n\nich_dag_tidy <- ich_dag |>\n  tidy_dagitty() |>\n  node_status()\n\ncolors <- met.brewer(name = \"VanGogh1\", n = 7, type = \"discrete\")\nstatus_colors <- c(exposure = colors[3], outcome = colors[6], latent = \"grey50\")\n\n# Fancy DAG\nggplot(ich_dag_tidy, aes(x = x, y = y, xend = xend, yend = yend)) +\n  geom_dag_edges(aes(color = \"grey50\")) +\n  geom_dag_point(aes(color = status), size = 20) +\n  geom_dag_label_repel(aes(label = label, fill = status),\n    seed = 1234,\n    color = \"white\", fontface = \"bold\", family = \"Cantarell\", size = 5\n  ) +\n  scale_color_manual(values = status_colors, na.value = \"grey20\") +\n  scale_fill_manual(values = status_colors, na.value = \"grey20\") +\n  guides(color = FALSE, fill = FALSE)\n\n\n\n\n\nCode\nggdag_adjustment_set(ich_dag_tidy) +\n  geom_dag_edges(aes(color = \"grey50\")) +\n  geom_dag_point(aes(color = status), size = 20) +\n  geom_dag_label_repel(aes(label = label, fill = status),\n    seed = 1234,\n    color = \"white\", fontface = \"bold\", family = \"Cantarell\", size = 5\n  ) +\n  scale_color_manual(values = status_colors, na.value = \"grey20\") +\n  scale_fill_manual(values = status_colors, na.value = \"grey20\") +\n  guides(color = FALSE, fill = FALSE)\n\n\n\n\n\nCode\nggdag_paths(ich_dag_tidy) +\n  geom_dag_edges(aes(color = \"grey50\")) +\n  geom_dag_point(aes(color = status), size = 20) +\n  geom_dag_label_repel(aes(label = label, fill = status),\n    seed = 1234,\n    color = \"white\", fontface = \"bold\", family = \"Cantarell\", size = 5\n  ) +\n  scale_color_manual(values = status_colors, na.value = \"grey20\") +\n  scale_fill_manual(values = status_colors, na.value = \"grey20\") +\n  guides(color = FALSE, fill = FALSE)\n\n\n\n\n\nCode\nadjustment_vars <- c(\"neurosurgery\", \"age\", \"ich_volume\", \"ivh\", \"gcs_baseline\", \"ich_location\", \"wlst\")\n\ncontrol_for(ich_dag_tidy, var = adjustment_vars)\n\n\n# A DAG with 9 nodes and 23 edges\n#\n# Exposure: ich_laterality\n# Outcome: functional_disability\n# Paths opened by conditioning on a collider: ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, ich_laterality <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ivh <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, ich_volume <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, gcs_baseline <-> ich_laterality, gcs_baseline <-> ich_laterality, gcs_baseline <-> ich_laterality, gcs_baseline <-> ich_laterality, gcs_baseline <-> ich_laterality, gcs_baseline <-> ich_laterality, ivh <-> ich_laterality, ivh <-> ich_laterality, ivh <-> ich_laterality, ivh <-> ich_laterality, ivh <-> ich_laterality, ivh <-> ich_laterality, ich_volume <-> ich_laterality, ich_volume <-> ich_laterality, ich_volume <-> ich_laterality, ich_volume <-> ich_laterality, ich_volume <-> ich_laterality, ich_volume <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, age <-> ich_laterality, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ivh <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, ich_volume <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_volume <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, ich_location <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, gcs_baseline <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, age <-> ivh, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, ich_location <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, gcs_baseline <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, age <-> ich_volume, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, gcs_baseline <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> ich_location, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline, age <-> gcs_baseline\n#\n# A tibble: 440 × 12\n   name                x     y direction to     xend  yend circular label status\n   <chr>           <dbl> <dbl> <fct>     <chr> <dbl> <dbl> <lgl>    <chr> <fct> \n 1 age              2.75  3    ->        func…  4     1    FALSE    Age   <NA>  \n 2 age              2.75  3    ->        gcs_…  2     3.25 FALSE    Age   <NA>  \n 3 age              2.75  3    ->        ich_…  2     2.75 FALSE    Age   <NA>  \n 4 age              2.75  3    ->        neur…  2     1.5  FALSE    Age   <NA>  \n 5 age              2.75  3    ->        wlst   3.75  2.25 FALSE    Age   <NA>  \n 6 functional_dis…  4     1    <NA>      <NA>  NA    NA    FALSE    Func… outco…\n 7 gcs_baseline     2     3.25 ->        func…  4     1    FALSE    Admi… <NA>  \n 8 gcs_baseline     2     3.25 ->        neur…  2     1.5  FALSE    Admi… <NA>  \n 9 gcs_baseline     2     3.25 ->        wlst   3.75  2.25 FALSE    Admi… <NA>  \n10 ich_laterality   1     1    ->        func…  4     1    FALSE    Hemi… expos…\n# ℹ 430 more rows\n# ℹ 2 more variables: collider_line <lgl>, adjusted <fct>\n\n\nCode\nggdag_adjust(ich_dag_tidy, var = adjustment_vars) +\n  geom_dag_edges(aes(color = \"grey50\")) +\n  geom_dag_point(aes(color = status), size = 20) +\n  geom_dag_label_repel(aes(label = label, fill = status),\n    seed = 1234,\n    color = \"white\", fontface = \"bold\", family = \"Cantarell\", size = 5\n  ) +\n  scale_color_manual(values = status_colors, na.value = \"grey20\") +\n  scale_fill_manual(values = status_colors, na.value = \"grey20\") +\n  guides(color = FALSE, fill = FALSE)\n\n\n\n\n\nCode\nggdag_dseparated(ich_dag_tidy, controlling_for = adjustment_vars) +\n  geom_dag_edges(aes(color = \"grey50\")) +\n  geom_dag_point(aes(color = status), size = 20) +\n  geom_dag_label_repel(aes(label = label, fill = status),\n    seed = 1234,\n    color = \"white\", fontface = \"bold\", family = \"Cantarell\", size = 5\n  ) +\n  scale_color_manual(values = status_colors, na.value = \"grey20\") +\n  scale_fill_manual(values = status_colors, na.value = \"grey20\") +\n  guides(color = FALSE, fill = FALSE)"
  },
  {
    "objectID": "models.html",
    "href": "models.html",
    "title": "Models",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(ordinal)\nlibrary(marginaleffects)\nlibrary(modelsummary)\nlibrary(parameters)\nlibrary(brms)\nlibrary(cmdstanr)\nlibrary(tidybayes)\nlibrary(broom.mixed)\nlibrary(ggplot2)\nlibrary(ggdist)\nlibrary(broom)\nlibrary(janitor)\nlibrary(gt)\nlibrary(here)\n\n# seeds\nset.seed(160)\nBAYES_SEED &lt;- 160\n\n# Bayes\noptions(\n  mc.cores = parallel::detectCores(),\n  brms.backend = \"cmdstanr\"\n)\n\ndata &lt;- read_rds(here(\"data\", \"all.rds\"), refhook = NULL)\n\ndata &lt;- data |&gt;\n  filter(ich_location == \"Basal Ganglia\" | ich_location == \"Thalamus\" | ich_location == \"Lobar\") |&gt;\n  select(study, age, ich_laterality, ich_location, ich_volume_baseline, gcs_baseline, ivh, neurosurgery_evac, sbp_baseline, mrs_90_01, mrs_90_02, mrs_90_03, mrs_90_04, mrs_90) |&gt;\n  drop_na(ich_laterality)\n\ndata$ich_location &lt;- fct_drop(data$ich_location)\ndata$ich_laterality &lt;- fct_drop(data$ich_laterality)\n\ndata_erich_atach &lt;- data |&gt;\n  filter(study == \"ERICH\" | study == \"ATACH2\")\n\n\n# plot stuff\ntheme_set(theme_minimal(base_family = \"Cantarell\"))"
  },
  {
    "objectID": "descriptive.html",
    "href": "descriptive.html",
    "title": "ICH Laterality Analysis Notebook",
    "section": "",
    "text": "library(tidyverse) library(dagitty) library(ggdag) library(MetBrewer) library(here) library(tableone) library(gt) library(gtExtras) library(broom)\ndata <- read_csv(here(“data”, “all.csv”))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#| fig-width: 20\n\n\nhave to fix time from symptom onset to presentation in ED (units seems to be jacked up)\ntable1_vars <- c(“age”, “sex”, “race”, “ethnicity”, “htn”, “dm2”, “tobacco”, “sbp_baseline”, “gcs_baseline”, “nihss_baseline”, “ich_volume_baseline”, “ivh”, “ich_location”, “neurosurgery_evac”, “comfort_care_binary”, “study”)\ntable1 <- CreateTableOne(vars = table1_vars, data = data, strata = “ich_laterality”)\ntable1"
  },
  {
    "objectID": "models.html#estimate-the-causal-effect",
    "href": "models.html#estimate-the-causal-effect",
    "title": "Models",
    "section": "Estimate the Causal Effect",
    "text": "Estimate the Causal Effect\nFirst let’s do a replication of the INTERACT re-analysis.\n\n\nCode\npriors <- c(prior(normal(0, 1.5), class = Intercept))\n\ninits <- list(Intercept = c(-2, -1, 0, 1, 2, 2.5))\n\n# mod <- brm(mrs_90 ~ 1,\n#   data = data,\n#   family = cumulative(\"logit\"),\n#   prior = priors,\n#   init = rep(list(inits), 4),\n#   chains = 4, iter = 5000 * 2, seed = 28203, cores = 4,\n#   backend = \"cmdstanr\", refresh = 0\n# )"
  },
  {
    "objectID": "models.html#conduct-sensitivity-analyses",
    "href": "models.html#conduct-sensitivity-analyses",
    "title": "Models",
    "section": "Conduct Sensitivity Analyses",
    "text": "Conduct Sensitivity Analyses"
  },
  {
    "objectID": "models.html#visualization",
    "href": "models.html#visualization",
    "title": "Models",
    "section": "Visualization",
    "text": "Visualization\n\n\nCode\nmrs_prop &lt;- data |&gt;\n  count(mrs_90) |&gt;\n  mutate(p = n / sum(n), cumsum_p = cumsum(p)) |&gt;\n  na.omit()\n\nmrs_prop |&gt;\n  ggplot(aes(x = mrs_90, y = p)) +\n  geom_col(fill = \"coral\") +\n  scale_y_continuous(labels = scales::percent) +\n  labs(x = \"mRS 90\", y = \"Proportion\")\n\n\n\n\n\nCode\nmrs_prop |&gt;\n  ggplot(aes(x = as.integer(mrs_90), y = cumsum_p)) +\n  geom_point(size = 2) +\n  geom_line(linewidth = 1) +\n  labs(x = \"mRS 90\", y = \"Cumulative Proportion\")\n\n\n\n\n\nCode\nmrs_prop |&gt;\n  ggplot(aes(x = as.integer(mrs_90), y = log(cumsum_p) - log(1 - cumsum_p))) +\n  geom_point(size = 2) +\n  geom_line(linewidth = 1) +\n  labs(x = \"mRS 90\", y = \"Logit Cumulative Proportion\")"
  },
  {
    "objectID": "models.html#frequentist-analysis",
    "href": "models.html#frequentist-analysis",
    "title": "Models",
    "section": "Frequentist Analysis",
    "text": "Frequentist Analysis\n\nMediation Analysis with Neurosurgery and ICH Laterality\n\n\nCode\nfit_freq &lt;- clm(\n  mrs_90 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac,\n  data = data,\n  link = \"logit\"\n)\n\nsummary(fit_freq)\n\n\nformula: \nmrs_90 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac\ndata:    data\n\n link  threshold nobs logLik   AIC      niter max.grad cond.H \n logit flexible  3105 -5009.42 10044.84 6(0)  1.90e-11 1.3e+06\n\nCoefficients:\n                      Estimate Std. Error z value Pr(&gt;|z|)    \nich_lateralityRight   0.175924   0.066688   2.638  0.00834 ** \nage                   0.047218   0.002600  18.159  &lt; 2e-16 ***\nich_locationLobar    -0.722721   0.088540  -8.163 3.28e-16 ***\nich_locationThalamus  0.600833   0.079165   7.590 3.21e-14 ***\nich_volume_baseline   0.048246   0.002375  20.312  &lt; 2e-16 ***\ngcs_baseline         -0.185189   0.012534 -14.775  &lt; 2e-16 ***\nneurosurgery_evacYes  0.257076   0.134916   1.905  0.05672 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nThreshold coefficients:\n    Estimate Std. Error z value\n0|1  -2.0359     0.2370  -8.591\n1|2  -0.1817     0.2287  -0.794\n2|3   0.8436     0.2295   3.675\n3|4   1.7358     0.2313   7.504\n4|5   3.2534     0.2352  13.831\n5|6   3.9700     0.2385  16.642\n(1435 observations deleted due to missingness)\n\n\nCode\npredictions(fit_freq, by = \"ich_laterality\", type = \"cum.prob\") |&gt;\n  gt()\n\n\n\n\n\n\n  \n    \n    \n      group\n      ich_laterality\n      estimate\n      std.error\n      statistic\n      p.value\n      s.value\n      conf.low\n      conf.high\n    \n  \n  \n    0\nLeft\n0.05170063\n0.004182767\n12.36039\n4.280705e-35\n114.1696\n0.04350256\n0.05989870\n    0\nRight\n0.04689133\n0.003863670\n12.13647\n6.768054e-34\n110.1868\n0.03931867\n0.05446398\n    1\nLeft\n0.21964692\n0.008094430\n27.13557\n3.748449e-162\n536.2461\n0.20378213\n0.23551171\n    1\nRight\n0.20616439\n0.007884370\n26.14849\n1.025194e-150\n498.2533\n0.19071131\n0.22161747\n    2\nLeft\n0.38860356\n0.009561093\n40.64426\n0.000000e+00\nInf\n0.36986416\n0.40734296\n    2\nRight\n0.37317285\n0.009518685\n39.20425\n0.000000e+00\nInf\n0.35451657\n0.39182913\n    3\nLeft\n0.55232940\n0.009498554\n58.14879\n0.000000e+00\nInf\n0.53371258\n0.57094622\n    3\nRight\n0.53895835\n0.009541802\n56.48392\n0.000000e+00\nInf\n0.52025676\n0.55765994\n    4\nLeft\n0.78159627\n0.007101016\n110.06823\n0.000000e+00\nInf\n0.76767854\n0.79551401\n    4\nRight\n0.77519113\n0.007193416\n107.76397\n0.000000e+00\nInf\n0.76109229\n0.78928996\n    5\nLeft\n0.85282445\n0.005735993\n148.67948\n0.000000e+00\nInf\n0.84158211\n0.86406679\n    5\nRight\n0.84955782\n0.005896570\n144.07661\n0.000000e+00\nInf\n0.83800076\n0.86111489\n    6\nLeft\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n    6\nRight\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n  \n  \n  \n\n\n\n\nCode\npredictions(fit_freq, by = c(\"ich_location\", \"ich_laterality\"), type = \"cum.prob\") |&gt;\n  gt()\n\n\n\n\n\n\n  \n    \n    \n      group\n      ich_location\n      ich_laterality\n      estimate\n      std.error\n      statistic\n      p.value\n      s.value\n      conf.low\n      conf.high\n    \n  \n  \n    0\nBasal Ganglia\nLeft\n0.05470263\n0.004793131\n11.41271\n3.612749e-30\n97.80475\n0.04530827\n0.06409700\n    0\nBasal Ganglia\nRight\n0.05420352\n0.004906071\n11.04826\n2.235170e-28\n91.85360\n0.04458780\n0.06381925\n    0\nLobar\nLeft\n0.06390128\n0.005792187\n11.03232\n2.668784e-28\n91.59780\n0.05254880\n0.07525376\n    0\nLobar\nRight\n0.05668614\n0.005221576\n10.85614\n1.864736e-27\n88.79309\n0.04645204\n0.06692024\n    0\nThalamus\nLeft\n0.03593127\n0.003564679\n10.07981\n6.785973e-24\n76.96372\n0.02894463\n0.04291791\n    0\nThalamus\nRight\n0.03148284\n0.003081832\n10.21562\n1.687906e-24\n78.97104\n0.02544256\n0.03752312\n    1\nBasal Ganglia\nLeft\n0.23371147\n0.010178104\n22.96218\n1.113441e-116\n385.18863\n0.21376275\n0.25366018\n    1\nBasal Ganglia\nRight\n0.23894462\n0.011021952\n21.67897\n3.240189e-104\n343.78444\n0.21734199\n0.26054725\n    1\nLobar\nLeft\n0.24406204\n0.011204071\n21.78334\n3.338556e-105\n347.06323\n0.22210247\n0.26602162\n    1\nLobar\nRight\n0.22170785\n0.010534091\n21.04670\n2.451711e-98\n324.25516\n0.20106141\n0.24235429\n    1\nThalamus\nLeft\n0.17679627\n0.010029001\n17.62850\n1.488568e-69\n228.63911\n0.15713979\n0.19645275\n    1\nThalamus\nRight\n0.15977160\n0.008961803\n17.82806\n4.279883e-71\n233.75932\n0.14220679\n0.17733641\n    2\nBasal Ganglia\nLeft\n0.40978950\n0.012058082\n33.98463\n3.757641e-253\n838.53798\n0.38615609\n0.43342290\n    2\nBasal Ganglia\nRight\n0.42329574\n0.012969929\n32.63671\n1.237238e-233\n773.70212\n0.39787515\n0.44871633\n    2\nLobar\nLeft\n0.40259603\n0.012538766\n32.10811\n3.397642e-226\n748.99122\n0.37802050\n0.42717156\n    2\nLobar\nRight\n0.37265045\n0.012163719\n30.63623\n4.032142e-206\n682.30564\n0.34881000\n0.39649090\n    2\nThalamus\nLeft\n0.34564699\n0.013732893\n25.16928\n8.694202e-140\n461.94988\n0.31873101\n0.37256296\n    2\nThalamus\nRight\n0.32165821\n0.012800329\n25.12890\n2.403953e-139\n460.48260\n0.29657002\n0.34674639\n    3\nBasal Ganglia\nLeft\n0.57558948\n0.011700004\n49.19566\n0.000000e+00\nInf\n0.55265789\n0.59852106\n    3\nBasal Ganglia\nRight\n0.59331691\n0.012085981\n49.09133\n0.000000e+00\nInf\n0.56962882\n0.61700500\n    3\nLobar\nLeft\n0.54522411\n0.011829783\n46.08910\n0.000000e+00\nInf\n0.52203816\n0.56841006\n    3\nLobar\nRight\n0.51416409\n0.011989819\n42.88339\n0.000000e+00\nInf\n0.49066448\n0.53766371\n    3\nThalamus\nLeft\n0.52645762\n0.014396834\n36.56760\n9.366502e-293\n970.09742\n0.49824035\n0.55467490\n    3\nThalamus\nRight\n0.50246384\n0.013912699\n36.11548\n1.296150e-285\n946.37527\n0.47519545\n0.52973223\n    4\nBasal Ganglia\nLeft\n0.80231219\n0.008274738\n96.95922\n0.000000e+00\nInf\n0.78609401\n0.81853038\n    4\nBasal Ganglia\nRight\n0.81421046\n0.007869037\n103.47016\n0.000000e+00\nInf\n0.79878743\n0.82963348\n    4\nLobar\nLeft\n0.74092628\n0.008612144\n86.03273\n0.000000e+00\nInf\n0.72404679\n0.75780577\n    4\nLobar\nRight\n0.72213959\n0.009592938\n75.27825\n0.000000e+00\nInf\n0.70333777\n0.74094140\n    4\nThalamus\nLeft\n0.79109662\n0.010136064\n78.04771\n0.000000e+00\nInf\n0.77123030\n0.81096294\n    4\nThalamus\nRight\n0.77718524\n0.010234256\n75.93960\n0.000000e+00\nInf\n0.75712646\n0.79724401\n    5\nBasal Ganglia\nLeft\n0.87160347\n0.006435993\n135.42641\n0.000000e+00\nInf\n0.85898915\n0.88421778\n    5\nBasal Ganglia\nRight\n0.87929674\n0.006053759\n145.24806\n0.000000e+00\nInf\n0.86743159\n0.89116189\n    5\nLobar\nLeft\n0.80595981\n0.007171972\n112.37632\n0.000000e+00\nInf\n0.79190300\n0.82001662\n    5\nLobar\nRight\n0.79573031\n0.008294042\n95.93999\n0.000000e+00\nInf\n0.77947429\n0.81198634\n    5\nThalamus\nLeft\n0.87090986\n0.007530754\n115.64710\n0.000000e+00\nInf\n0.85614986\n0.88566987\n    5\nThalamus\nRight\n0.86178788\n0.007750350\n111.19342\n0.000000e+00\nInf\n0.84659747\n0.87697828\n    6\nBasal Ganglia\nLeft\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n    6\nBasal Ganglia\nRight\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n    6\nLobar\nLeft\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n    6\nLobar\nRight\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n    6\nThalamus\nLeft\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n    6\nThalamus\nRight\n1.00000000\nNA\nNA\nNA\nNA\nNA\nNA\n  \n  \n  \n\n\n\n\nCode\nplot_predictions(fit_freq, condition = c(\"ich_location\", \"ich_laterality\"), type = \"cum.prob\")\n\n\nWarning: Removed 6 rows containing missing values (`geom_segment()`).\n\n\n\n\n\nCode\ntidy(fit_freq)\n\n\n# A tibble: 13 × 6\n   term                 estimate std.error statistic  p.value coef.type\n   &lt;chr&gt;                   &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1 0|1                   -2.04     0.237      -8.59  8.65e-18 intercept\n 2 1|2                   -0.182    0.229      -0.794 4.27e- 1 intercept\n 3 2|3                    0.844    0.230       3.68  2.38e- 4 intercept\n 4 3|4                    1.74     0.231       7.50  6.19e-14 intercept\n 5 4|5                    3.25     0.235      13.8   1.65e-43 intercept\n 6 5|6                    3.97     0.239      16.6   3.43e-62 intercept\n 7 ich_lateralityRight    0.176    0.0667      2.64  8.34e- 3 location \n 8 age                    0.0472   0.00260    18.2   1.10e-73 location \n 9 ich_locationLobar     -0.723    0.0885     -8.16  3.28e-16 location \n10 ich_locationThalamus   0.601    0.0792      7.59  3.21e-14 location \n11 ich_volume_baseline    0.0482   0.00238    20.3   1.01e-91 location \n12 gcs_baseline          -0.185    0.0125    -14.8   2.13e-49 location \n13 neurosurgery_evacYes   0.257    0.135       1.91  5.67e- 2 location"
  },
  {
    "objectID": "models.html#bayesian-analysis",
    "href": "models.html#bayesian-analysis",
    "title": "Models",
    "section": "Bayesian Analysis",
    "text": "Bayesian Analysis\n\n\nCode\nfit_brms &lt;- brm(\n  mrs_90 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac,\n  data = data,\n  family = cumulative(logit),\n  prior = set_prior(\"normal(0,5)\"),\n  chains = 2,\n  cores = 6,\n  backend = \"cmdstanr\"\n)\n\n\nRunning MCMC with 2 chains, at most 6 in parallel...\n\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 1 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 2 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 2 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 1 finished in 50.7 seconds.\nChain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 finished in 53.3 seconds.\n\nBoth chains finished successfully.\nMean chain execution time: 52.0 seconds.\nTotal execution time: 53.4 seconds.\n\n\nCode\nprint(fit_brms)\n\n\n Family: cumulative \n  Links: mu = logit; disc = identity \nFormula: mrs_90 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac \n   Data: data (Number of observations: 3105) \n  Draws: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 2000\n\nPopulation-Level Effects: \n                     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nIntercept[1]            -2.04      0.24    -2.52    -1.60 1.00     3091\nIntercept[2]            -0.18      0.23    -0.64     0.25 1.00     3992\nIntercept[3]             0.84      0.23     0.38     1.29 1.00     3944\nIntercept[4]             1.73      0.23     1.28     2.18 1.00     3735\nIntercept[5]             3.25      0.23     2.79     3.69 1.00     3684\nIntercept[6]             3.97      0.24     3.49     4.42 1.00     3803\nich_lateralityRight      0.18      0.06     0.05     0.31 1.00     3318\nage                      0.05      0.00     0.04     0.05 1.00     2963\nich_locationLobar       -0.72      0.09    -0.89    -0.55 1.00     2507\nich_locationThalamus     0.60      0.08     0.45     0.75 1.00     2450\nich_volume_baseline      0.05      0.00     0.04     0.05 1.00     2589\ngcs_baseline            -0.19      0.01    -0.21    -0.16 1.00     3000\nneurosurgery_evacYes     0.26      0.14    -0.00     0.53 1.00     3137\n                     Tail_ESS\nIntercept[1]             1720\nIntercept[2]             1817\nIntercept[3]             1817\nIntercept[4]             1720\nIntercept[5]             1822\nIntercept[6]             1577\nich_lateralityRight      1851\nage                      1460\nich_locationLobar        1732\nich_locationThalamus     1581\nich_volume_baseline      1885\ngcs_baseline             1400\nneurosurgery_evacYes     1360\n\nFamily Specific Parameters: \n     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\ndisc     1.00      0.00     1.00     1.00   NA       NA       NA\n\nDraws were sampled using sample(hmc). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCode\npredictions(fit_brms, by = c(\"ich_location\", \"ich_laterality\"), type = \"response\") |&gt;\n  gt()\n\n\n\n\n\n\n  \n    \n    \n      group\n      ich_location\n      ich_laterality\n      estimate\n      conf.low\n      conf.high\n    \n  \n  \n    0\nBasal Ganglia\nLeft\n0.05476916\n0.04568810\n0.06425541\n    0\nBasal Ganglia\nRight\n0.05408528\n0.04525725\n0.06422505\n    0\nLobar\nLeft\n0.06392319\n0.05283039\n0.07582288\n    0\nLobar\nRight\n0.05646086\n0.04706907\n0.06778025\n    0\nThalamus\nLeft\n0.03588338\n0.02920052\n0.04353126\n    0\nThalamus\nRight\n0.03143190\n0.02568936\n0.03826052\n    1\nBasal Ganglia\nLeft\n0.17880280\n0.16301774\n0.19502565\n    1\nBasal Ganglia\nRight\n0.18471302\n0.16701686\n0.20228312\n    1\nLobar\nLeft\n0.17996613\n0.16453484\n0.19711059\n    1\nLobar\nRight\n0.16494717\n0.14950790\n0.18133779\n    1\nThalamus\nLeft\n0.14102624\n0.12576088\n0.15679528\n    1\nThalamus\nRight\n0.12835900\n0.11515481\n0.14296104\n    2\nBasal Ganglia\nLeft\n0.17582889\n0.16175084\n0.18947597\n    2\nBasal Ganglia\nRight\n0.18403319\n0.16933782\n0.19878200\n    2\nLobar\nLeft\n0.15816770\n0.14600836\n0.17083070\n    2\nLobar\nRight\n0.15072211\n0.13866787\n0.16276390\n    2\nThalamus\nLeft\n0.16858588\n0.15424350\n0.18444218\n    2\nThalamus\nRight\n0.16189931\n0.14737474\n0.17660973\n    3\nBasal Ganglia\nLeft\n0.16575636\n0.15266986\n0.17823730\n    3\nBasal Ganglia\nRight\n0.17004740\n0.15647169\n0.18302410\n    3\nLobar\nLeft\n0.14261132\n0.13099034\n0.15397360\n    3\nLobar\nRight\n0.14161227\n0.12987062\n0.15262111\n    3\nThalamus\nLeft\n0.18073952\n0.16690762\n0.19496682\n    3\nThalamus\nRight\n0.18067962\n0.16690230\n0.19500460\n    4\nBasal Ganglia\nLeft\n0.22654966\n0.21071753\n0.24187550\n    4\nBasal Ganglia\nRight\n0.22051999\n0.20503013\n0.23682852\n    4\nLobar\nLeft\n0.19556386\n0.18107451\n0.20972519\n    4\nLobar\nRight\n0.20793230\n0.19326758\n0.22205206\n    4\nThalamus\nLeft\n0.26432704\n0.24603844\n0.28121825\n    4\nThalamus\nRight\n0.27416188\n0.25579245\n0.29109285\n    5\nBasal Ganglia\nLeft\n0.06922771\n0.06065723\n0.07850728\n    5\nBasal Ganglia\nRight\n0.06511334\n0.05714509\n0.07375225\n    5\nLobar\nLeft\n0.06508108\n0.05709879\n0.07349384\n    5\nLobar\nRight\n0.07355189\n0.06480311\n0.08291975\n    5\nThalamus\nLeft\n0.07976250\n0.07010539\n0.09063163\n    5\nThalamus\nRight\n0.08450455\n0.07413082\n0.09562529\n    6\nBasal Ganglia\nLeft\n0.12837356\n0.11660336\n0.14173471\n    6\nBasal Ganglia\nRight\n0.12069134\n0.11011193\n0.13306931\n    6\nLobar\nLeft\n0.19382912\n0.18132049\n0.20720278\n    6\nLobar\nRight\n0.20404127\n0.18842027\n0.22101081\n    6\nThalamus\nLeft\n0.12903899\n0.11494956\n0.14480899\n    6\nThalamus\nRight\n0.13806016\n0.12337288\n0.15320705\n  \n  \n  \n\n\n\n\nCode\nplot_predictions(fit_brms, condition = c(\"ich_location\", \"ich_laterality\"), type = \"response\")"
  },
  {
    "objectID": "logistic.html",
    "href": "logistic.html",
    "title": "Logistic Models",
    "section": "",
    "text": "These analyses are intended to build up intuition on using Bayesian logistic regression as a stepping stone to understanding and using Bayesian ordinal regression. We will work with dichotimized variables of the modified Rankin score as well as the EuroQOL."
  },
  {
    "objectID": "logistic.html#general-setup",
    "href": "logistic.html#general-setup",
    "title": "Logistic Models",
    "section": "General Setup",
    "text": "General Setup\nWe are interested in modeling the probability of a “good” outcome for patients with ICH at 90 days as defined by the modified Rankin Scale. For this session, we will work with a dichotimized version of the mRS at various cutpoints (0-1 vs 2-6, 0-2 vs 3-6, 0-3 vs 4-6, 0-45 vs 5-6). All of these cutpoints have been used in various randomized trials and observational studies.\nWe will base our model on these predictors:\n\nage\nich_laterality: the main “predictor” of interest for the main analysis\nich_location: only supratentorial locations are used (lobar, thalamus, basal ganglia)\nich_volume_baseline\nivh\nneurosurgery_evac\n\n\nModeling poor outcome given age and ICH Volume\nWe will use continuous variables first before jumping into categorical predictors.\n\n\nCode\ndata |>\n  drop_na(mrs_90_03) |>\n  ggplot(aes(x = mrs_90_03)) +\n  geom_density(fill = colors[3], alpha = 0.2) +\n  facet_wrap(~ich_location)\n\n\n\n\n\nCode\ndata |>\n  drop_na(mrs_90_02) |>\n  tabyl(ich_location, mrs_90_02) |>\n  adorn_percentages()\n\n\n  ich_location     FALSE      TRUE\n Basal Ganglia 0.2207207 0.7792793\n         Lobar 0.2286465 0.7713535\n      Thalamus 0.1738462 0.8261538"
  },
  {
    "objectID": "aggressive_care.html",
    "href": "aggressive_care.html",
    "title": "Aggressive Care and Hemispheric Laterality",
    "section": "",
    "text": "Setup\nlibrary(tidyverse) # ggplot, dplyr, and friends\nlibrary(janitor)\nlibrary(glue) # Easier string interpolation\nlibrary(gt) # Fancy tables\nlibrary(scales) # Nicer labeling functions\nlibrary(patchwork) # Combine plots nicely\nlibrary(ggmosaic) # Mosaic plots with ggplot\nlibrary(parameters) # Extract model parameters as data frames\nlibrary(cmdstanr) # Run Stan code from R\nlibrary(brms) # Nice frontend for Stan\nlibrary(tidybayes) # Manipulate MCMC chains in a tidy way\nlibrary(here)\n\n# Set some global Stan options\nCHAINS <- 4\nITER <- 2000\nWARMUP <- 1000\nBAYES_SEED <- 160\noptions(mc.cores = parallel::detectCores(), brms.backend = \"cmdstanr\")\n\n# ggplot theming\ntheme_nice <- function() {\n  theme_minimal(base_family = \"Cantarell\") +\n    theme(\n      panel.grid.minor = element_blank(),\n      plot.title = element_text(family = \"Cantarell\", face = \"bold\"),\n      axis.title = element_text(family = \"Cantarell Medium\"),\n      axis.title.x = element_text(hjust = 0),\n      axis.title.y = element_text(hjust = 1),\n      strip.text = element_text(\n        family = \"Cantarell\", face = \"bold\",\n        size = rel(1), hjust = 0\n      ),\n      strip.background = element_rect(fill = NA, color = NA)\n    )\n}\nI am interested in seeing if hemispheric laterality affects the aggressiveness of care that a patient receives. This mostly includes neurosurgery, but also other processes such as days of mechanical ventilation, EVD placement, rates of tracheostomy/PEG, and if patients were transitioned to comfort care.\nI will be using observational data from the ERICH study, as well as the randomized trial data from ATACH-2 to answer these questions."
  },
  {
    "objectID": "aggressive_care.html#exploratory-data-analysis",
    "href": "aggressive_care.html#exploratory-data-analysis",
    "title": "Aggressive Care and Hemispheric Laterality",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nLoading the data from ATACH-2 and ERICH, and filtering out the variables needed for the analysis.\n\n# load data\ndata <- read_rds(here(\"data\", \"all.rds\"), refhook = NULL)\n\n# filter out only ERICH and ATACH2 and keep relevant variables\ncleaned_data <- data |>\n  mutate(id = 1:n()) |>\n  filter(study == \"ERICH\" | study == \"ATACH-2\") |>\n  select(id, study, ich_laterality, age, sex, race, ethnicity, sbp_baseline, gcs_baseline, ich_volume_baseline, ivh, ich_location, neurosurgery_evac, evd, tracheostomy, peg, comfort_care_binary, comfort_care_day) |>\n  drop_na(ich_laterality, neurosurgery_evac)\n\nNow we can summarize the preliminary data.\n\ncounts <- cleaned_data |>\n  tabyl(ich_laterality, neurosurgery_evac) |>\n  adorn_percentages(\"row\") |>\n  adorn_pct_formatting(rounding = \"half up\", digits = 1) |>\n  gt()\n\ncounts\n\n\n\n\n\n  \n    \n    \n      ich_laterality\n      No\n      Yes\n    \n  \n  \n    Left\n94.1%\n5.9%\n    Right\n90.5%\n9.5%\n  \n  \n  \n\n\n\nggplot(cleaned_data) +\n  geom_mosaic(\n    aes(\n      x = product(neurosurgery_evac, ich_laterality),\n      fill = ich_laterality, alpha = neurosurgery_evac\n    ),\n    divider = mosaic(\"v\")\n  )\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\nWarning: `unite_()` was deprecated in tidyr 1.2.0.\nℹ Please use `unite()` instead.\nℹ The deprecated feature was likely used in the ggmosaic package.\n  Please report the issue at <https://github.com/haleyjeppson/ggmosaic>."
  },
  {
    "objectID": "aggressive_care.html#the-question",
    "href": "aggressive_care.html#the-question",
    "title": "Aggressive Care and Hemispheric Laterality",
    "section": "The Question",
    "text": "The Question\nDo patients with left hemispheric ICH receive neurosurgical evacuations less frequently as compared to patients with right hemispheric ICH?\nWe want to determine if there’s a substantial difference in the proportion of patients who receive neurosurgical intervention in the right or left hemisphere.\n\n# Left/Right hemisphere question colors\nclrs_saguaro <- NatParksPalettes::natparks.pals(\"Saguaro\")\nclr_left <- clrs_saguaro[1]\nclr_right <- clrs_saguaro[6]\nclr_diff <- clrs_saguaro[4]"
  },
  {
    "objectID": "aggressive_care.html#frequentist-way",
    "href": "aggressive_care.html#frequentist-way",
    "title": "Aggressive Care and Hemispheric Laterality",
    "section": "Frequentist Way",
    "text": "Frequentist Way\n\nmod_freq <- lm(neurosurgery_evac ~ ich_laterality + 0,\n  data = cleaned_data\n)\n\nWarning in model.response(mf, \"numeric\"): using type = \"numeric\" with a factor\nresponse will be ignored\n\n\nWarning in Ops.factor(y, z$residuals): '-' not meaningful for factors\n\nmodel_parameters(mod_freq, exponentiate = TRUE)\n\nParameter              | Coefficient | 95% CI |   df\n----------------------------------------------------\nich laterality [Left]  |        2.88 |        | 3806\nich laterality [Right] |        2.99 |        | 3806\n\n\n\nUncertainty intervals (equal-tailed) and p-values (two-tailed) computed\n  using a Wald t-distribution approximation."
  },
  {
    "objectID": "posterior.html",
    "href": "posterior.html",
    "title": "Visualizing Posterior Distributions and Predictions",
    "section": "",
    "text": "This is an attempt to teach myself some concepts about the visualizing the posterior distribution in Bayesian models by re-creating Andrew Heiss’ blog post about this."
  },
  {
    "objectID": "posterior.html#palmer-penguins-example",
    "href": "posterior.html#palmer-penguins-example",
    "title": "Visualizing Posterior Distributions and Predictions",
    "section": "Palmer Penguins Example",
    "text": "Palmer Penguins Example\nAndrew first uses the Palmer Penguins dataset to examine the relationship between penguin flipper length and body mass.\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(size = 1, alpha = 0.7) +\n  geom_smooth(method = \"lm\", color = colors[5], se = FALSE) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(x = \"Flipper length (mm)\", y = \"Body mass (g)\")\n\n\n\n\nThis can be written more formally as:\n\\[\n\\begin{aligned}\n\\text{Body mass}_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta \\ \\text{Flipper length}_i\n\\end{aligned}\n\\]\nOr more generally:\n\\[\n\\begin{aligned}\ny_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta x_i\n\\end{aligned}\n\\]\nThis states that body mass is normally distributed with an average that is conditional on flipper length.\n\nmodel_normal_penguins <- brm(\n  bf(body_mass_g ~ flipper_length_mm),\n  family = gaussian(),\n  data = penguins\n)\n\n\nbroom.mixed::tidy(model_normal_penguins, conf.level = 0.89) |>\n  bind_cols(parameter = c(\"α\", \"β\", \"σ\")) |>\n  select(parameter, term, estimate, std.error, conf.low, conf.high)\n\nWarning in tidy.brmsfit(model_normal_penguins, conf.level = 0.89): some\nparameter names contain underscores: term naming may be unreliable!\n\n\n# A tibble: 3 × 6\n  parameter term              estimate std.error conf.low conf.high\n  <chr>     <chr>                <dbl>     <dbl>    <dbl>     <dbl>\n1 α         (Intercept)        -5871.     309.    -6371.    -5369. \n2 β         flipper_length_mm     50.1      1.54     47.6      52.6\n3 σ         sd__Observation      395.      15.5     370.      421. \n\n\nThe intercept (α) is huge and negative because flipper length is far away from 0, so it’s pretty uninterpretable. We could fix that by centering the data, so α would indicate the body mass for an average flipper length.\nThe coefficient β shows that a one-mm increase in flipper length is associated with a 50 gram increase in body mass. And the overall model standard deviation σ shows that there’s roughly 400 grams of deviation around the mean body mass.\nThese are all the posterior means but remember that we have complete distributions for these parameters.\nHowever, here we want to examine the posterior distribution of body mass, which is the outcome we are ultimately interested in. Remember this is represented by “mu” and the overall posterior distribution of “y”. Both of these represent body mass, but they are really different things. Mu represents the mean body mass, and y represents the total distribution including the standard deviation.\nThere are three different brms functions that we can use, listed below along with their corresponding tidybayes wrappers:\n\nposterior_predict(): predicted_draws\nposterior_epred(): epred_draws\nposterior_linpred() linpred_draws\n\nWe have to feed the functions newdata, which is a data frame of values to make the predictions. If we feed the original dataset, it would plug each row of the data into the model and generate a bunch of posterior draws (4000). This would result in 333 * 4000 rows of data, which isn’t super useful to visualize.\nWe can first look at the predictions based on a single value of flipper lengths. Andrew uses the average, which is 200.967 mm. You can use the median or whatever number you want.\n\n# Make a little dataset of just the average flipper length\npenguins_avg_flipper <- penguins |>\n  summarize(flipper_length_mm = mean(flipper_length_mm))\n\n# Extract different types of posteriors\nnormal_linpred <- model_normal_penguins |>\n  linpred_draws(newdata = penguins_avg_flipper)\n\nnormal_epred <- model_normal_penguins |>\n  epred_draws(newdata = penguins_avg_flipper)\n\nnormal_predicted <- model_normal_penguins |>\n  predicted_draws(\n    newdata = penguins_avg_flipper,\n    seed = 12345\n  ) # So that the manual results with rnorm() are the same later\n\nNow we can look at each distribution’s mean, median, standard deviation, and shapes.\n\nsummary_normal_linpred <- normal_linpred |>\n  ungroup() |>\n  summarize(across(.linpred, lst(mean, sd, median), .names = \"{.fn}\"))\n\nsummary_normal_epred <- normal_epred |>\n  ungroup() |>\n  summarize(across(.epred, lst(mean, sd, median), .names = \"{.fn}\"))\n\nsummary_normal_predicted <- normal_predicted |>\n  ungroup() |>\n  summarize(across(.prediction, lst(mean, sd, median), .names = \"{.fn}\"))\n\ntribble(\n  ~Function, ~`Model element`,\n  \"<code>posterior_linpred()</code>\", \"\\\\(\\\\mu\\\\) in the model\",\n  \"<code>posterior_epred()</code>\", \"\\\\(\\\\operatorname{E(y)}\\\\) and \\\\(\\\\mu\\\\) in the model\",\n  \"<code>posterior_predict()</code>\", \"Random draws from posterior \\\\(\\\\operatorname{Normal}(\\\\mu_i, \\\\sigma)\\\\)\"\n) |>\n  bind_cols(bind_rows(summary_normal_linpred, summary_normal_epred, summary_normal_predicted)) |>\n  kbl(escape = FALSE) |>\n  kable_styling()\n\n\n\n \n  \n    Function \n    Model element \n    mean \n    sd \n    median \n  \n \n\n  \n    posterior_linpred() \n    \\(\\mu\\) in the model \n    4207.193 \n    21.75033 \n    4207.393 \n  \n  \n    posterior_epred() \n    \\(\\operatorname{E(y)}\\) and \\(\\mu\\) in the model \n    4207.193 \n    21.75033 \n    4207.393 \n  \n  \n    posterior_predict() \n    Random draws from posterior \\(\\operatorname{Normal}(\\mu_i, \\sigma)\\) \n    4207.799 \n    387.39673 \n    4208.746 \n  \n\n\n\n\np1 <- ggplot(normal_linpred, aes(x = .linpred)) +\n  stat_halfeye(fill = colors[3]) +\n  scale_x_continuous(labels = label_comma()) +\n  coord_cartesian(xlim = c(4100, 4300)) +\n  labs(\n    x = \"Body mass (g)\", y = NULL,\n    title = \"**Linear predictor** <span style='font-size: 14px;'>*µ* in the model</span>\",\n    subtitle = \"posterior_linpred(..., tibble(flipper_length_mm = 201))\"\n  ) +\n  theme(plot.title = element_markdown())\n\np2 <- ggplot(normal_epred, aes(x = .epred)) +\n  stat_halfeye(fill = colors[2]) +\n  scale_x_continuous(labels = label_comma()) +\n  coord_cartesian(xlim = c(4100, 4300)) +\n  labs(\n    x = \"Body mass (g)\", y = NULL,\n    title = \"**Expectation of the posterior** <span style='font-size: 14px;'>E[*y*] and *µ* in the model</span>\",\n    subtitle = \"posterior_epred(..., tibble(flipper_length_mm = 201))\"\n  )\n\np3 <- ggplot(normal_predicted, aes(x = .prediction)) +\n  stat_halfeye(fill = colors[1]) +\n  scale_x_continuous(labels = label_comma()) +\n  coord_cartesian(xlim = c(2900, 5500)) +\n  labs(\n    x = \"Body mass (g)\", y = NULL,\n    title = \"**Posterior predictions** <span style='font-size: 14px;'>Random draws from posterior Normal(*µ*, *σ*)</span>\",\n    subtitle = \"posterior_predict(..., tibble(flipper_length_mm = 201))\"\n  )\n\n(p1 / plot_spacer() / p2 / plot_spacer() / p3) +\n  plot_layout(heights = c(0.3, 0.05, 0.3, 0.05, 0.3))\n\n\n\n\nThe range of predictions is the biggest difference among these. The posterior_linpred() and posterior_epred() have small spreads (standard errors) while posterior_predict() has a larger spread.\nThis is due to posterior_linpred() and posterior_epred() corresponding to the “mu” part of the model and not incorporating any standard deviation.\nWe can re-recreate posterior_linpred() by remembering that this is the average body mass as predicted by the model, which is B0 + (B1 * flipper_length). So if we plug-in 201 into this, we get the same thing as posterior_linpred().\nThe results of posterior_predict() incorporate the standard deviation as well as the mean, thus resulting in more uncertainty.\nFor posterior_epred(), the results in the Gaussian regression are the same as that of the linear predictor posterior_linpred().\nWe can also look at these different types of posterior predictions across a range of possible flipper lengths. There’s a lot more uncertainty in the full posterior, since it incorporates the uncertainty of both and , while the uncertainty of the linear predictor/expected value of the posterior is much more narrow (and equivalent in this case):\n\np1 <- penguins |>\n  data_grid(flipper_length_mm = seq_range(flipper_length_mm, n = 100)) |>\n  add_linpred_draws(model_normal_penguins, ndraws = 100) |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_lineribbon(aes(y = .linpred),\n    .width = 0.95,\n    alpha = 0.5, color = colors[3], fill = colors[3]\n  ) +\n  geom_point(data = penguins, aes(y = body_mass_g), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    title = \"**Linear predictor** <span style='font-size: 14px;'>*µ* in the model</span>\",\n    subtitle = \"posterior_linpred()\"\n  )\n\np2 <- penguins |>\n  data_grid(flipper_length_mm = seq_range(flipper_length_mm, n = 100)) |>\n  add_epred_draws(model_normal_penguins, ndraws = 100) |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_lineribbon(aes(y = .epred),\n    .width = 0.95,\n    alpha = 0.5, color = colors[2], fill = colors[2]\n  ) +\n  geom_point(data = penguins, aes(y = body_mass_g), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    title = \"**Expectation of the posterior** <span style='font-size: 14px;'>E[*y*] and *µ* in the model</span>\",\n    subtitle = \"posterior_epred()\"\n  )\n\np3 <- penguins |>\n  data_grid(flipper_length_mm = seq_range(flipper_length_mm, n = 100)) |>\n  add_predicted_draws(model_normal_penguins, ndraws = 100) |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_lineribbon(aes(y = .prediction),\n    .width = 0.95,\n    alpha = 0.5, color = colors[1], fill = colors[1]\n  ) +\n  geom_point(data = penguins, aes(y = body_mass_g), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    title = \"**Posterior predictions** <span style='font-size: 14px;'>Random draws from posterior Normal(*µ*, *σ*)</span>\",\n    subtitle = \"posterior_predict()\"\n  )\n\n(p1 / plot_spacer() / p2 / plot_spacer() / p3) +\n  plot_layout(heights = c(0.3, 0.05, 0.3, 0.05, 0.3))\n\n\n\n\n\nICH Example\nHere we will examine the relationship between age and ICH volume on admission. It is not as strong of a relationship, but we’re not trying to publish anything here so it’ll serve just fine.\n\nggplot(data, aes(x = age, y = ich_volume_baseline)) +\n  geom_point(size = 1, alpha = 0.7) +\n  geom_smooth(method = \"lm\", color = colors[5], se = FALSE) +\n  scale_y_continuous(labels = label_comma()) +\n  # coord_cartesian(ylim = c(2000, 6000)) +\n  labs(x = \"Flipper length (mm)\", y = \"Body mass (g)\")\n\n\n\n\nAgain, his can be written more formally as:\n\\[\n\\begin{aligned}\n\\text{ICH Volume}_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta \\ \\text{Age}_i\n\\end{aligned}\n\\]\nOr more generally:\n\\[\n\\begin{aligned}\ny_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta x_i\n\\end{aligned}\n\\]\nThis states that ICH Volume is normally distributed with an average that is conditional on age.\n\nmodel_normal_ich <- brm(\n  ich_volume_baseline ~ age,\n  family = gaussian(),\n  data = data\n)\n\n\nbroom.mixed::tidy(model_normal_ich, conf.level = 0.89) |>\n  bind_cols(parameter = c(\"α\", \"β\", \"σ\")) |>\n  select(parameter, term, estimate, std.error, conf.low, conf.high)\n\n# A tibble: 3 × 6\n  parameter term            estimate std.error conf.low conf.high\n  <chr>     <chr>              <dbl>     <dbl>    <dbl>     <dbl>\n1 α         (Intercept)        8.16     2.38      4.29     11.9  \n2 β         age                0.230    0.0376    0.171     0.291\n3 σ         sd__Observation   26.3      0.385    25.7      26.9"
  },
  {
    "objectID": "posterior.html#normal-gaussian-model",
    "href": "posterior.html#normal-gaussian-model",
    "title": "Visualizing Posterior Distributions and Predictions",
    "section": "Normal Gaussian model",
    "text": "Normal Gaussian model\n\nPalmer Penguins Example\nAndrew first uses the Palmer Penguins dataset to examine the relationship between penguin flipper length and body mass.\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(size = 1, alpha = 0.7) +\n  geom_smooth(method = \"lm\", color = colors[5], se = FALSE) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(x = \"Flipper length (mm)\", y = \"Body mass (g)\")\n\n\n\n\nThis can be written more formally as:\n\\[\n\\begin{aligned}\n\\text{Body mass}_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta \\ \\text{Flipper length}_i\n\\end{aligned}\n\\]\nOr more generally:\n\\[\n\\begin{aligned}\ny_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta x_i\n\\end{aligned}\n\\]\nThis states that body mass is normally distributed with an average that is conditional on flipper length.\n\nmodel_normal_penguins <- brm(\n  bf(body_mass_g ~ flipper_length_mm),\n  family = gaussian(),\n  data = penguins\n)\n\n\nbroom.mixed::tidy(model_normal_penguins, conf.level = 0.89) |>\n  bind_cols(parameter = c(\"α\", \"β\", \"σ\")) |>\n  select(parameter, term, estimate, std.error, conf.low, conf.high)\n\nWarning in tidy.brmsfit(model_normal_penguins, conf.level = 0.89): some\nparameter names contain underscores: term naming may be unreliable!\n\n\n# A tibble: 3 × 6\n  parameter term              estimate std.error conf.low conf.high\n  <chr>     <chr>                <dbl>     <dbl>    <dbl>     <dbl>\n1 α         (Intercept)        -5871.     309.    -6371.    -5369. \n2 β         flipper_length_mm     50.1      1.54     47.6      52.6\n3 σ         sd__Observation      395.      15.5     370.      421. \n\n\nThe intercept (α) is huge and negative because flipper length is far away from 0, so it’s pretty uninterpretable. We could fix that by centering the data, so α would indicate the body mass for an average flipper length.\nThe coefficient β shows that a one-mm increase in flipper length is associated with a 50 gram increase in body mass. And the overall model standard deviation σ shows that there’s roughly 400 grams of deviation around the mean body mass.\nThese are all the posterior means but remember that we have complete distributions for these parameters.\nHowever, here we want to examine the posterior distribution of body mass, which is the outcome we are ultimately interested in. Remember this is represented by “mu” and the overall posterior distribution of “y”. Both of these represent body mass, but they are really different things. Mu represents the mean body mass, and y represents the total distribution including the standard deviation.\nThere are three different brms functions that we can use, listed below along with their corresponding tidybayes wrappers:\n\nposterior_predict(): predicted_draws\nposterior_epred(): epred_draws\nposterior_linpred() linpred_draws\n\nWe have to feed the functions newdata, which is a data frame of values to make the predictions. If we feed the original dataset, it would plug each row of the data into the model and generate a bunch of posterior draws (4000). This would result in 333 * 4000 rows of data, which isn’t super useful to visualize.\nWe can first look at the predictions based on a single value of flipper lengths. Andrew uses the average, which is 200.967 mm. You can use the median or whatever number you want.\n\n# Make a little dataset of just the average flipper length\npenguins_avg_flipper <- penguins |>\n  summarize(flipper_length_mm = mean(flipper_length_mm))\n\n# Extract different types of posteriors\nnormal_linpred <- model_normal_penguins |>\n  linpred_draws(newdata = penguins_avg_flipper)\n\nnormal_epred <- model_normal_penguins |>\n  epred_draws(newdata = penguins_avg_flipper)\n\nnormal_predicted <- model_normal_penguins |>\n  predicted_draws(\n    newdata = penguins_avg_flipper,\n    seed = 12345\n  ) # So that the manual results with rnorm() are the same later\n\nNow we can look at each distribution’s mean, median, standard deviation, and shapes.\n\nsummary_normal_linpred <- normal_linpred |>\n  ungroup() |>\n  summarize(across(.linpred, lst(mean, sd, median), .names = \"{.fn}\"))\n\nsummary_normal_epred <- normal_epred |>\n  ungroup() |>\n  summarize(across(.epred, lst(mean, sd, median), .names = \"{.fn}\"))\n\nsummary_normal_predicted <- normal_predicted |>\n  ungroup() |>\n  summarize(across(.prediction, lst(mean, sd, median), .names = \"{.fn}\"))\n\ntribble(\n  ~Function, ~`Model element`,\n  \"<code>posterior_linpred()</code>\", \"\\\\(\\\\mu\\\\) in the model\",\n  \"<code>posterior_epred()</code>\", \"\\\\(\\\\operatorname{E(y)}\\\\) and \\\\(\\\\mu\\\\) in the model\",\n  \"<code>posterior_predict()</code>\", \"Random draws from posterior \\\\(\\\\operatorname{Normal}(\\\\mu_i, \\\\sigma)\\\\)\"\n) |>\n  bind_cols(bind_rows(summary_normal_linpred, summary_normal_epred, summary_normal_predicted)) |>\n  kbl(escape = FALSE) |>\n  kable_styling()\n\n\n\n \n  \n    Function \n    Model element \n    mean \n    sd \n    median \n  \n \n\n  \n    posterior_linpred() \n    \\(\\mu\\) in the model \n    4207.193 \n    21.75033 \n    4207.393 \n  \n  \n    posterior_epred() \n    \\(\\operatorname{E(y)}\\) and \\(\\mu\\) in the model \n    4207.193 \n    21.75033 \n    4207.393 \n  \n  \n    posterior_predict() \n    Random draws from posterior \\(\\operatorname{Normal}(\\mu_i, \\sigma)\\) \n    4207.799 \n    387.39673 \n    4208.746 \n  \n\n\n\n\np1 <- ggplot(normal_linpred, aes(x = .linpred)) +\n  stat_halfeye(fill = colors[3]) +\n  scale_x_continuous(labels = label_comma()) +\n  coord_cartesian(xlim = c(4100, 4300)) +\n  labs(\n    x = \"Body mass (g)\", y = NULL,\n    title = \"**Linear predictor** <span style='font-size: 14px;'>*µ* in the model</span>\",\n    subtitle = \"posterior_linpred(..., tibble(flipper_length_mm = 201))\"\n  ) +\n  theme(plot.title = element_markdown())\n\np2 <- ggplot(normal_epred, aes(x = .epred)) +\n  stat_halfeye(fill = colors[2]) +\n  scale_x_continuous(labels = label_comma()) +\n  coord_cartesian(xlim = c(4100, 4300)) +\n  labs(\n    x = \"Body mass (g)\", y = NULL,\n    title = \"**Expectation of the posterior** <span style='font-size: 14px;'>E[*y*] and *µ* in the model</span>\",\n    subtitle = \"posterior_epred(..., tibble(flipper_length_mm = 201))\"\n  )\n\np3 <- ggplot(normal_predicted, aes(x = .prediction)) +\n  stat_halfeye(fill = colors[1]) +\n  scale_x_continuous(labels = label_comma()) +\n  coord_cartesian(xlim = c(2900, 5500)) +\n  labs(\n    x = \"Body mass (g)\", y = NULL,\n    title = \"**Posterior predictions** <span style='font-size: 14px;'>Random draws from posterior Normal(*µ*, *σ*)</span>\",\n    subtitle = \"posterior_predict(..., tibble(flipper_length_mm = 201))\"\n  )\n\n(p1 / plot_spacer() / p2 / plot_spacer() / p3) +\n  plot_layout(heights = c(0.3, 0.05, 0.3, 0.05, 0.3))\n\n\n\n\nThe range of predictions is the biggest difference among these. The posterior_linpred() and posterior_epred() have small spreads (standard errors) while posterior_predict() has a larger spread.\nThis is due to posterior_linpred() and posterior_epred() corresponding to the “mu” part of the model and not incorporating any standard deviation.\nWe can re-recreate posterior_linpred() by remembering that this is the average body mass as predicted by the model, which is B0 + (B1 * flipper_length). So if we plug-in 201 into this, we get the same thing as posterior_linpred().\nThe results of posterior_predict() incorporate the standard deviation as well as the mean, thus resulting in more uncertainty.\nFor posterior_epred(), the results in the Gaussian regression are the same as that of the linear predictor posterior_linpred().\nWe can also look at these different types of posterior predictions across a range of possible flipper lengths. There’s a lot more uncertainty in the full posterior, since it incorporates the uncertainty of both and , while the uncertainty of the linear predictor/expected value of the posterior is much more narrow (and equivalent in this case):\n\np1 <- penguins |>\n  data_grid(flipper_length_mm = seq_range(flipper_length_mm, n = 100)) |>\n  add_linpred_draws(model_normal_penguins, ndraws = 100) |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_lineribbon(aes(y = .linpred),\n    .width = 0.95,\n    alpha = 0.5, color = colors[3], fill = colors[3]\n  ) +\n  geom_point(data = penguins, aes(y = body_mass_g), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    title = \"**Linear predictor** <span style='font-size: 14px;'>*µ* in the model</span>\",\n    subtitle = \"posterior_linpred()\"\n  )\n\np2 <- penguins |>\n  data_grid(flipper_length_mm = seq_range(flipper_length_mm, n = 100)) |>\n  add_epred_draws(model_normal_penguins, ndraws = 100) |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_lineribbon(aes(y = .epred),\n    .width = 0.95,\n    alpha = 0.5, color = colors[2], fill = colors[2]\n  ) +\n  geom_point(data = penguins, aes(y = body_mass_g), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    title = \"**Expectation of the posterior** <span style='font-size: 14px;'>E[*y*] and *µ* in the model</span>\",\n    subtitle = \"posterior_epred()\"\n  )\n\np3 <- penguins |>\n  data_grid(flipper_length_mm = seq_range(flipper_length_mm, n = 100)) |>\n  add_predicted_draws(model_normal_penguins, ndraws = 100) |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_lineribbon(aes(y = .prediction),\n    .width = 0.95,\n    alpha = 0.5, color = colors[1], fill = colors[1]\n  ) +\n  geom_point(data = penguins, aes(y = body_mass_g), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    title = \"**Posterior predictions** <span style='font-size: 14px;'>Random draws from posterior Normal(*µ*, *σ*)</span>\",\n    subtitle = \"posterior_predict()\"\n  )\n\n(p1 / plot_spacer() / p2 / plot_spacer() / p3) +\n  plot_layout(heights = c(0.3, 0.05, 0.3, 0.05, 0.3))\n\n\n\n\n\n\nICH Example\nHere we will examine the relationship between age and ICH volume on admission. It is not as strong of a relationship, but we’re not trying to publish anything here so it’ll serve just fine.\n\nggplot(data, aes(x = age, y = ich_volume_baseline)) +\n  geom_point(size = 1, alpha = 0.7) +\n  geom_smooth(method = \"lm\", color = colors[5], se = FALSE) +\n  scale_y_continuous(labels = label_comma()) +\n  # coord_cartesian(ylim = c(2000, 6000)) +\n  labs(x = \"Age (years)\", y = \"ICH Volume (mL)\")\n\n\n\n\nAgain, his can be written more formally as:\n\\[\n\\begin{aligned}\n\\text{ICH Volume}_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta \\ \\text{Age}_i\n\\end{aligned}\n\\]\nOr more generally:\n\\[\n\\begin{aligned}\ny_i &\\sim \\operatorname{Normal}(\\mu_i, \\sigma) \\\\\n\\mu_i &= \\alpha + \\beta x_i\n\\end{aligned}\n\\]\nThis states that ICH Volume is normally distributed with an average that is conditional on age.\n\nmodel_normal_ich <- brm(\n  ich_volume_baseline ~ age,\n  family = gaussian(),\n  data = data\n)\n\n\nbroom.mixed::tidy(model_normal_ich, conf.level = 0.89) |>\n  bind_cols(parameter = c(\"α\", \"β\", \"σ\")) |>\n  select(parameter, term, estimate, std.error, conf.low, conf.high)\n\n# A tibble: 3 × 6\n  parameter term            estimate std.error conf.low conf.high\n  <chr>     <chr>              <dbl>     <dbl>    <dbl>     <dbl>\n1 α         (Intercept)        8.16     2.38      4.29     11.9  \n2 β         age                0.230    0.0376    0.171     0.291\n3 σ         sd__Observation   26.3      0.385    25.7      26.9  \n\n\nThe intercept (α) is not very big and because it’s impossible for age to be 0, it’s pretty uninterpretable. We could fix that by centering the data, so α would indicate the ICH Volume for an average age.\nThe coefficient β shows that a one year increase in age is associated with a 0.2 mL increase in ICH Volume. And the overall model standard deviation σ shows that there’s roughly 27 mL of deviation around the mean ICH volume.\nNow we will feed the average age and examine the distributions of ICH Volume.\n\n# Make a little dataset of just the average flipper length\nich_avg_age <- data |>\n  summarize(age = mean(age))\n\n# Extract different types of posteriors\nnormal_linpred <- model_normal_ich |>\n  linpred_draws(newdata = ich_avg_age)\n\nnormal_epred <- model_normal_ich |>\n  epred_draws(newdata = ich_avg_age)\n\nnormal_predicted <- model_normal_ich |>\n  predicted_draws(\n    newdata = ich_avg_age,\n    seed = 12345\n  ) # So that the manual results with rnorm() are the same later\n\nNow we can look at each distribution’s mean, median, standard deviation, and shapes.\n\nsummary_normal_linpred <- normal_linpred |>\n  ungroup() |>\n  summarize(across(.linpred, lst(mean, sd, median), .names = \"{.fn}\"))\n\nsummary_normal_epred <- normal_epred |>\n  ungroup() |>\n  summarize(across(.epred, lst(mean, sd, median), .names = \"{.fn}\"))\n\nsummary_normal_predicted <- normal_predicted |>\n  ungroup() |>\n  summarize(across(.prediction, lst(mean, sd, median), .names = \"{.fn}\"))\n\ntribble(\n  ~Function, ~`Model element`,\n  \"<code>posterior_linpred()</code>\", \"\\\\(\\\\mu\\\\) in the model\",\n  \"<code>posterior_epred()</code>\", \"\\\\(\\\\operatorname{E(y)}\\\\) and \\\\(\\\\mu\\\\) in the model\",\n  \"<code>posterior_predict()</code>\", \"Random draws from posterior \\\\(\\\\operatorname{Normal}(\\\\mu_i, \\\\sigma)\\\\)\"\n) |>\n  bind_cols(bind_rows(summary_normal_linpred, summary_normal_epred, summary_normal_predicted)) |>\n  kbl(escape = FALSE) |>\n  kable_styling()\n\n\n\n \n  \n    Function \n    Model element \n    mean \n    sd \n    median \n  \n \n\n  \n    posterior_linpred() \n    \\(\\mu\\) in the model \n    22.38172 \n    0.5412149 \n    22.38020 \n  \n  \n    posterior_epred() \n    \\(\\operatorname{E(y)}\\) and \\(\\mu\\) in the model \n    22.38172 \n    0.5412149 \n    22.38020 \n  \n  \n    posterior_predict() \n    Random draws from posterior \\(\\operatorname{Normal}(\\mu_i, \\sigma)\\) \n    22.42869 \n    25.8059239 \n    22.41982 \n  \n\n\n\n\np1 <- ggplot(normal_linpred, aes(x = .linpred)) +\n  stat_halfeye(fill = colors[3]) +\n  scale_x_continuous(labels = label_comma()) +\n  # coord_cartesian(xlim = c(4100, 4300)) +\n  labs(\n    x = \"ICH Volume (mL)\", y = NULL,\n    title = \"**Linear predictor** <span style='font-size: 14px;'>*µ* in the model</span>\",\n    subtitle = \"posterior_linpred(..., tibble(flipper_length_mm = 201))\"\n  ) +\n  theme(plot.title = element_markdown())\n\np2 <- ggplot(normal_epred, aes(x = .epred)) +\n  stat_halfeye(fill = colors[2]) +\n  scale_x_continuous(labels = label_comma()) +\n  # coord_cartesian(xlim = c(4100, 4300)) +\n  labs(\n    x = \"ICH Volume (mL)\", y = NULL,\n    title = \"**Expectation of the posterior** <span style='font-size: 14px;'>E[*y*] and *µ* in the model</span>\",\n    subtitle = \"posterior_epred(..., tibble(flipper_length_mm = 201))\"\n  )\n\np3 <- ggplot(normal_predicted, aes(x = .prediction)) +\n  stat_halfeye(fill = colors[1]) +\n  scale_x_continuous(labels = label_comma()) +\n  # coord_cartesian(xlim = c(2900, 5500)) +\n  labs(\n    x = \"ICH Volume (mL)\", y = NULL,\n    title = \"**Posterior predictions** <span style='font-size: 14px;'>Random draws from posterior Normal(*µ*, *σ*)</span>\",\n    subtitle = \"posterior_predict(..., tibble(flipper_length_mm = 201))\"\n  )\n\n(p1 / plot_spacer() / p2 / plot_spacer() / p3) +\n  plot_layout(heights = c(0.3, 0.05, 0.3, 0.05, 0.3))\n\n\n\n\nNow here is the full posterior:\n\np1 <- data |>\n  data_grid(age = seq_range(age, n = 100)) |>\n  add_linpred_draws(model_normal_ich, ndraws = 100) |>\n  ggplot(aes(x = age)) +\n  stat_lineribbon(aes(y = .linpred),\n    .width = 0.95,\n    alpha = 0.5, color = colors[3], fill = colors[3]\n  ) +\n  geom_point(data = data, aes(y = ich_volume_baseline), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  # coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Age (years)\", y = \"ICH Volume (mL)\",\n    title = \"**Linear predictor** <span style='font-size: 14px;'>*µ* in the model</span>\",\n    subtitle = \"posterior_linpred()\"\n  )\n\np2 <- data |>\n  data_grid(age = seq_range(age, n = 100)) |>\n  add_epred_draws(model_normal_ich, ndraws = 100) |>\n  ggplot(aes(x = age)) +\n  stat_lineribbon(aes(y = .epred),\n    .width = 0.95,\n    alpha = 0.5, color = colors[2], fill = colors[2]\n  ) +\n  geom_point(data = data, aes(y = ich_volume_baseline), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  # coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Age (years)\", y = \"ICH Volume (mL)\",\n    title = \"**Expectation of the posterior** <span style='font-size: 14px;'>E[*y*] and *µ* in the model</span>\",\n    subtitle = \"posterior_epred()\"\n  )\n\np3 <- data |>\n  data_grid(age = seq_range(age, n = 100)) |>\n  add_predicted_draws(model_normal_ich, ndraws = 100) |>\n  ggplot(aes(x = age)) +\n  stat_lineribbon(aes(y = .prediction),\n    .width = 0.95,\n    alpha = 0.5, color = colors[1], fill = colors[1]\n  ) +\n  geom_point(data = data, aes(y = ich_volume_baseline), size = 1, alpha = 0.7) +\n  scale_y_continuous(labels = label_comma()) +\n  # coord_cartesian(ylim = c(2000, 6000)) +\n  labs(\n    x = \"Age (years)\", y = \"ICH Volume (mL)\",\n    title = \"**Posterior predictions** <span style='font-size: 14px;'>Random draws from posterior Normal(*µ*, *σ*)</span>\",\n    subtitle = \"posterior_predict()\"\n  )\n\n(p1 / plot_spacer() / p2 / plot_spacer() / p3) +\n  plot_layout(heights = c(0.3, 0.05, 0.3, 0.05, 0.3))\n\nWarning: Removed 20 rows containing missing values (`geom_point()`).\nRemoved 20 rows containing missing values (`geom_point()`).\nRemoved 20 rows containing missing values (`geom_point()`).\n\n\n\n\n\nIf we had set better priors, we would not be left with ranges of possible ICH volumes that are negative, but that is for another post."
  },
  {
    "objectID": "posterior.html#logistic-regression-example",
    "href": "posterior.html#logistic-regression-example",
    "title": "Visualizing Posterior Distributions and Predictions",
    "section": "Logistic Regression Example",
    "text": "Logistic Regression Example\n\nggplot(penguins, aes(x = bill_length_mm, y = as.numeric(is_gentoo))) +\n  geom_dots(aes(side = ifelse(is_gentoo, \"bottom\", \"top\")),\n    pch = 19, color = \"grey20\", scale = 0.2\n  ) +\n  geom_smooth(\n    method = \"glm\", method.args = list(family = binomial(link = \"logit\")),\n    color = colors[5], se = FALSE\n  ) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(x = \"Bill length (mm)\", y = \"Probability of being a Gentoo\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data, aes(x = ich_volume_baseline, y = as.numeric(mrs_90_03))) +\n  geom_dots(aes(side = ifelse(mrs_90_04, \"bottom\", \"top\")),\n    pch = 19, color = \"grey20\", scale = 0.2\n  ) +\n  geom_smooth(\n    method = \"glm\", method.args = list(family = binomial(link = \"logit\")),\n    color = colors[5], se = FALSE\n  ) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(x = \"Bill length (mm)\", y = \"Probability of being a Gentoo\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 427 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 20 rows containing non-finite values (`geom_dotsinterval()`).\n\n\nWarning: Removed 407 rows containing missing values (`geom_dotsinterval()`)."
  },
  {
    "objectID": "models.html#dichotimized-mrs-0-3-vs.-4-6",
    "href": "models.html#dichotimized-mrs-0-3-vs.-4-6",
    "title": "Models",
    "section": "Dichotimized mRS: 0-3 vs. 4-6",
    "text": "Dichotimized mRS: 0-3 vs. 4-6\n\nPriors\nBased on previous knowledge, we can say that on average, there is a 60% chance of a good outcome of mRS 0-3. On the log-odds scale, that would be qlogis(0.6) = 0.41. That can range a lot from 20% to 80%, so in log-odds we can say that is qlogis(0.2) = -1.38 as the variance.\n\n\nCode\nmodel_mrs03 &lt;- brm(\n  mrs_90_03 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac,\n  family = bernoulli(link = \"logit\"),\n  data = data\n)\n\n\nWarning: Rows containing NAs were excluded from the model.\n\n\nIn file included from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array/multi_array_ref.hpp:32,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array.hpp:34,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint/algebra/multi_array_algebra.hpp:22,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint.hpp:63,\n                 from stan/lib/stan_math/stan/math/prim/functor/ode_rk45.hpp:9,\n                 from stan/lib/stan_math/stan/math/prim/functor/integrate_ode_rk45.hpp:6,\n                 from stan/lib/stan_math/stan/math/prim/functor.hpp:15,\n                 from stan/lib/stan_math/stan/math/rev/fun.hpp:198,\n                 from stan/lib/stan_math/stan/math/rev.hpp:10,\n                 from stan/lib/stan_math/stan/math.hpp:19,\n                 from stan/src/stan/model/model_header.hpp:4,\n                 from /tmp/RtmpZgLE3L/model-25237ab4614e.hpp:2:\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:180:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  180 |         : public boost::functional::detail::unary_function&lt;typename unary_traits&lt;Predicate&gt;::argument_type,bool&gt;\n      |                                             ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/13.2.1/string:49,\n                 from /usr/include/c++/13.2.1/bits/locale_classes.h:40,\n                 from /usr/include/c++/13.2.1/bits/ios_base.h:41,\n                 from /usr/include/c++/13.2.1/ios:44,\n                 from /usr/include/c++/13.2.1/istream:40,\n                 from /usr/include/c++/13.2.1/sstream:40,\n                 from /usr/include/c++/13.2.1/complex:45,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Core:50,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Dense:1,\n                 from stan/lib/stan_math/stan/math/prim/fun/Eigen.hpp:22,\n                 from stan/lib/stan_math/stan/\n\n\nmath/rev.hpp:4:\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\n\n\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:214:45: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  214 |         : public boost::functional::detail::binary_function&lt;\n      |                                             ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:252:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  252 |         : public boost::functional::detail::unary_function&lt;\n      |                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:299:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  299 |         : public boost::functional::detail::unary_function&lt;\n      |                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:345:57: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  345 |     class mem_fun_t : public boost::functional::detail::unary_function&lt;T*, S&gt;\n      |                                                         ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:361:58: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; st\n\n\nruct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  361 |     class mem_fun1_t : public boost::functional::detail::binary_function&lt;T*, A, S&gt;\n      |                                                          ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:377:63: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  377 |     class const_mem_fun_t : public boost::functional::detail::unary_function&lt;const T*, S&gt;\n      |                                                               ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:393:64: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  393 |     class const_mem_fun1_t : public boost::functional::detail::binary_function&lt;const T*, A, S&gt;\n      |                                                                ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:438:61: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  438 |     class mem_fun_ref_t : public boost::functional::detail::unary_function&lt;T&, S&gt;\n      |                                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:454:62: warning: ‘template&lt;class _\n\n\nArg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  454 |     class mem_fun1_ref_t : public boost::functional::detail::binary_function&lt;T&, A, S&gt;\n      |                                                              ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:470:67: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  470 |     class const_mem_fun_ref_t : public boost::functional::detail::unary_function&lt;const T&, S&gt;\n      |                                                                   ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:487:68: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  487 |     class const_mem_fun1_ref_t : public boost::functional::detail::binary_function&lt;const T&, A, S&gt;\n      |                                                                    ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:533:73: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  533 |     class pointer_to_unary_function : public boost::functional::detail::unary_function&lt;Arg,Result&gt;\n      |                                                                         ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nst\n\n\nan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:557:74: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  557 |     class pointer_to_binary_function : public boost::functional::detail::binary_function&lt;Arg1,Arg2,Result&gt;\n      |                                                                          ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\n\n\nStart sampling\n\n\nRunning MCMC with 4 chains, at most 8 in parallel...\n\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 1 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 3 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 2 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 3 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 3 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 4 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 2 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 3 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 4 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 3 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 3 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 4 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 3 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 4 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 3 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 4 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 3 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 4 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 3 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 3 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 4 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 4 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 3 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 3 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 4 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 3 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 4 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 4 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 1 finished in 2.1 seconds.\nChain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 3 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 3 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 4 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 4 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 3 finished in 2.3 seconds.\nChain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 4 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 4 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 2 finished in 2.5 seconds.\nChain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 finished in 2.5 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 2.4 seconds.\nTotal execution time: 3.0 seconds.\n\n\nCode\nprint(model_mrs03)\n\n\n Family: bernoulli \n  Links: mu = logit \nFormula: mrs_90_03 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac \n   Data: data (Number of observations: 3105) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nPopulation-Level Effects: \n                     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nIntercept               -1.08      0.32    -1.69    -0.45 1.00     6173\nich_lateralityRight      0.11      0.09    -0.06     0.28 1.00     5991\nage                      0.05      0.00     0.04     0.05 1.00     6234\nich_locationLobar       -0.93      0.12    -1.18    -0.71 1.00     4280\nich_locationThalamus     0.54      0.10     0.33     0.74 1.00     3950\nich_volume_baseline      0.06      0.00     0.05     0.07 1.00     4478\ngcs_baseline            -0.18      0.02    -0.21    -0.14 1.00     5336\nneurosurgery_evacYes     0.83      0.23     0.39     1.30 1.00     5713\n                     Tail_ESS\nIntercept                3019\nich_lateralityRight      2851\nage                      3090\nich_locationLobar        2845\nich_locationThalamus     2907\nich_volume_baseline      3411\ngcs_baseline             3044\nneurosurgery_evacYes     3031\n\nDraws were sampled using sample(hmc). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n\n\nCode\npp_check(model_mrs03, ndraws = 500)\n\n\n\n\n\nCode\nmodel_parameters(model_mrs03,\n  centrality = \"mean\", dispersion = TRUE,\n  test = FALSE, verbose = FALSE, ci_method = \"hdi\", priors = TRUE,\n  exponentiate = TRUE\n) |&gt;\n  print(digits = 3, zap_small = TRUE)\n\n\n# Fixed Effects\n\nParameter            |  Mean |    SD |         95% CI |  Rhat |      ESS |                        Prior\n-------------------------------------------------------------------------------------------------------\n(Intercept)          | 0.340 | 0.322 | [0.187, 0.648] | 1.000 | 6442.000 | Student_t (df=3) (0 +- 2.50)\nich_lateralityRight  | 1.118 | 0.088 | [0.940, 1.329] | 1.000 | 5987.000 |                      Uniform\nage                  | 1.049 | 0.004 | [1.042, 1.056] | 1.001 | 6509.000 |                      Uniform\nich_locationLobar    | 0.393 | 0.119 | [0.311, 0.497] | 0.999 | 4164.000 |                      Uniform\nich_locationThalamus | 1.712 | 0.103 | [1.408, 2.118] | 1.000 | 3920.000 |                      Uniform\nich_volume_baseline  | 1.060 | 0.004 | [1.052, 1.069] | 0.999 | 4451.000 |                      Uniform\ngcs_baseline         | 0.837 | 0.018 | [0.808, 0.867] | 0.999 | 5352.000 |                      Uniform\nneurosurgery_evacYes | 2.300 | 0.230 | [1.447, 3.565] | 1.000 | 5603.000 |                      Uniform\n\n\nCode\nmodel_mrs_90 &lt;- brm(\n  mrs_90 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac,\n  family = cumulative(link = \"logit\"),\n  data = data_erich_atach\n)\n\n\nWarning: Rows containing NAs were excluded from the model.\n\n\nIn file included from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array/multi_array_ref.hpp:32,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array.hpp:34,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint/algebra/multi_array_algebra.hpp:22,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint.hpp:63,\n                 from stan/lib/stan_math/stan/math/prim/functor/ode_rk45.hpp:9,\n                 from stan/lib/stan_math/stan/math/prim/functor/integrate_ode_rk45.hpp:6,\n                 from stan/lib/stan_math/stan/math/prim/functor.hpp:15,\n                 from stan/lib/stan_math/stan/math/rev/fun.hpp:198,\n                 from stan/lib/stan_math/stan/math/rev.hpp:10,\n                 from stan/lib/stan_math/stan/math.hpp:19,\n                 from stan/src/stan/model/model_header.hpp:4,\n                 from /tmp/RtmpZgLE3L/model-25239ae42e4.hpp:2:\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:180:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  180 |         : public boost::functional::detail::unary_function&lt;typename unary_traits&lt;Predicate&gt;::argument_type,bool&gt;\n      |                                             ^~~~~~~~~~~~~~\n\n\nIn file included from /usr/include/c++/13.2.1/string:49,\n                 from /usr/include/c++/13.2.1/bits/locale_classes.h:40,\n                 from /usr/include/c++/13.2.1/bits/ios_base.h:41,\n                 from /usr/include/c++/13.2.1/ios:44,\n                 from /usr/include/c++/13.2.1/istream:40,\n                 from /usr/include/c++/13.2.1/sstream:40,\n                 from /usr/include/c++/13.2.1/complex:45,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Core:50,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Dense:1,\n                 from stan/lib/stan_math/stan/math/prim/fun/Eigen.hpp:22,\n                 from stan/lib/stan_math/stan/math/rev.hpp:4:\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:214:45: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  214 |         : public boost::functional::detail::binary_function&lt;\n      |                                             ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:252:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  252 |         : public boost::functional::detail::unary_function&lt;\n      |                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:299:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  299 |         : public boost::functional::d\n\n\netail::unary_function&lt;\n      |                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:345:57: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  345 |     class mem_fun_t : public boost::functional::detail::unary_function&lt;T*, S&gt;\n      |                                                         ^~~~~~~~~~~~~~\n\n\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:361:58: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  361 |     class mem_fun1_t : public boost::functional::detail::binary_function&lt;T*, A, S&gt;\n      |                                                          ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:377:63: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  377 |     class const_mem_fun_t : public boost::functional::detail::unary_function&lt;const T*, S&gt;\n      |                                                               ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:393:64: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  393 |     class const_mem_fun1_t : public boost::functional::detail::binary_function&lt;const T*, A, S&gt;\n      |                                                                ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:438:61: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  438 |     class mem_fun_ref_t : public boost::functional::detail::unary_function&lt;T&, S&gt;\n      |                                        \n\n\n                     ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:454:62: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  454 |     class mem_fun1_ref_t : public boost::functional::detail::binary_function&lt;T&, A, S&gt;\n      |                                                              ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:470:67: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  470 |     class const_mem_fun_ref_t : public boost::functional::detail::unary_function&lt;const T&, S&gt;\n      |                                                                   ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:487:68: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  487 |     class const_mem_fun1_ref_t : public boost::functional::detail::binary_function&lt;const T&, A, S&gt;\n      |                                                                    ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:533:73: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  533 |     class pointer_to_unary_function : public boost::functional::detai\n\n\nl::unary_function&lt;Arg,Result&gt;\n      |                                                                         ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\n\n\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:557:74: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  557 |     class pointer_to_binary_function : public boost::functional::detail::binary_function&lt;Arg1,Arg2,Result&gt;\n      |                                                                          ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\n\n\nStart sampling\n\n\nRunning MCMC with 4 chains, at most 8 in parallel...\n\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 3 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 4 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 3 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 2 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 3 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 4 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 3 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 2 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 4 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 1 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 4 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 3 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 3 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 3 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 4 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 3 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 4 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 4 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 3 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 4 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 3 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 3 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 4 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 3 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 4 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 4 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 3 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 4 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 3 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 3 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 4 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 3 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 4 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 3 finished in 28.5 seconds.\nChain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 4 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 4 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 finished in 31.8 seconds.\nChain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 finished in 33.0 seconds.\nChain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 1 finished in 34.9 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 32.0 seconds.\nTotal execution time: 34.9 seconds.\n\n\nCode\npp_check(model_mrs_90, type = \"ecdf_overlay\", ndraws = 500)\n\n\n\n\n\nCode\nmodel_parameters(model_mrs_90,\n  centrality = \"mean\", dispersion = TRUE,\n  test = FALSE, verbose = FALSE, ci_method = \"hdi\", priors = TRUE,\n  exponentiate = TRUE\n) |&gt;\n  print(digits = 3, zap_small = TRUE)\n\n\nParameter            |   Mean |    SD |           95% CI |  Rhat |      ESS |                        Prior\n----------------------------------------------------------------------------------------------------------\nIntercept[1]         |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 |                      Uniform\nb_Intercept[1]       |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.134 | 0.272 | [ 0.080,  0.231] | 1.000 | 6199.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[2]         |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 |                      Uniform\nb_Intercept[2]       |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.867 | 0.258 | [ 0.528,  1.446] | 1.000 | 6286.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[3]         |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 |                      Uniform\nb_Intercept[3]       |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.486 | 0.258 | [ 1.543,  4.261] | 1.000 | 6255.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[4]         |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 |                      Uniform\nb_Intercept[4]       |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.982 | 0.261 | [ 3.716, 10.331] | 1.000 | 6300.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[5]         | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 |                      Uniform\nb_Intercept[5]       | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 22.228 | 0.265 | [13.376, 37.729] | 1.000 | 6147.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[6]         | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 |                      Uniform\nb_Intercept[6]       | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 44.263 | 0.269 | [25.506, 73.458] | 1.000 | 6185.000 | Student_t (df=3) (0 +- 2.50)\nich_lateralityRight  |  1.154 | 0.081 | [ 0.990,  1.355] | 0.999 | 5671.000 |                      Uniform\nage                  |  1.050 | 0.003 | [ 1.044,  1.056] | 1.000 | 5539.000 |                      Uniform\nich_locationLobar    |  0.468 | 0.107 | [ 0.382,  0.579] | 1.000 | 5050.000 |                      Uniform\nich_locationThalamus |  1.715 | 0.103 | [ 1.385,  2.072] | 1.000 | 4727.000 |                      Uniform\nich_volume_baseline  |  1.045 | 0.003 | [ 1.040,  1.051] | 1.000 | 4602.000 |                      Uniform\ngcs_baseline         |  0.838 | 0.014 | [ 0.815,  0.862] | 0.999 | 5617.000 |                      Uniform\nneurosurgery_evacYes |  0.993 | 0.181 | [ 0.696,  1.392] | 0.999 | 5928.000 |                      Uniform\n\n\nCode\nmodel_mrs_90_all &lt;- brm(\n  mrs_90 ~ ich_laterality + age + ich_location + ich_volume_baseline + gcs_baseline + neurosurgery_evac,\n  family = cumulative(link = \"logit\"),\n  data = data\n)\n\n\nWarning: Rows containing NAs were excluded from the model.\n\n\nIn file included from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array/multi_array_ref.hpp:32,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/multi_array.hpp:34,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint/algebra/multi_array_algebra.hpp:22,\n                 from stan/lib/stan_math/lib/boost_1.78.0/boost/numeric/odeint.hpp:63,\n                 from stan/lib/stan_math/stan/math/prim/functor/ode_rk45.hpp:9,\n                 from stan/lib/stan_math/stan/math/prim/functor/integrate_ode_rk45.hpp:6,\n                 from stan/lib/stan_math/stan/math/prim/functor.hpp:15,\n                 from stan/lib/stan_math/stan/math/rev/fun.hpp:198,\n                 from stan/lib/stan_math/stan/math/rev.hpp:10,\n                 from stan/lib/stan_math/stan/math.hpp:19,\n                 from stan/src/stan/model/model_header.hpp:4,\n                 from /tmp/RtmpZgLE3L/model-2523667d67b6.hpp:2:\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:180:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  180 |         : public boost::functional::detail::unary_function&lt;typename unary_traits&lt;Predicate&gt;::argument_type,bool&gt;\n      |                                             ^~~~~~~~~~~~~~\nIn file included from /usr/include/c++/13.2.1/string:49,\n                 from /usr/include/c++/13.2.1/bits/locale_classes.h:40,\n                 from /usr/include/c++/13.2.1/bits/ios_base.h:41,\n                 from /usr/include/c++/13.2.1/ios:44,\n                 from /usr/include/c++/13.2.1/istream:40,\n                 from /usr/include/c++/13.2.1/sstream:40,\n                 from /usr/include/c++/13.2.1/complex:45,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Core:50,\n                 from stan/lib/stan_math/lib/eigen_3.4.0/Eigen/Dense:1,\n                 from stan/lib/stan_math/stan/math/prim/fun/Eigen.hpp:22,\n                 from stan/lib/stan_math/stan/\n\n\nmath/rev.hpp:4:\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\n\n\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:214:45: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  214 |         : public boost::functional::detail::binary_function&lt;\n      |                                             ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:252:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  252 |         : public boost::functional::detail::unary_function&lt;\n      |                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:299:45: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  299 |         : public boost::functional::detail::unary_function&lt;\n      |                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:345:57: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  345 |     class mem_fun_t : public boost::functional::detail::unary_function&lt;T*, S&gt;\n      |                                                         ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:361:58: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; st\n\n\nruct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  361 |     class mem_fun1_t : public boost::functional::detail::binary_function&lt;T*, A, S&gt;\n      |                                                          ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:377:63: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  377 |     class const_mem_fun_t : public boost::functional::detail::unary_function&lt;const T*, S&gt;\n      |                                                               ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:393:64: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  393 |     class const_mem_fun1_t : public boost::functional::detail::binary_function&lt;const T*, A, S&gt;\n      |                                                                ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:438:61: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  438 |     class mem_fun_ref_t : public boost::functional::detail::unary_function&lt;T&, S&gt;\n      |                                                             ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:454:62: warning: ‘template&lt;class _\n\n\nArg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  454 |     class mem_fun1_ref_t : public boost::functional::detail::binary_function&lt;T&, A, S&gt;\n      |                                                              ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:470:67: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  470 |     class const_mem_fun_ref_t : public boost::functional::detail::unary_function&lt;const T&, S&gt;\n      |                                                                   ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:487:68: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  487 |     class const_mem_fun1_ref_t : public boost::functional::detail::binary_function&lt;const T&, A, S&gt;\n      |                                                                    ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\nstan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:533:73: warning: ‘template&lt;class _Arg, class _Result&gt; struct std::unary_function’ is deprecated [-Wdeprecated-declarations]\n  533 |     class pointer_to_unary_function : public boost::functional::detail::unary_function&lt;Arg,Result&gt;\n      |                                                                         ^~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:117:12: note: declared here\n  117 |     struct unary_function\n      |            ^~~~~~~~~~~~~~\nst\n\n\nan/lib/stan_math/lib/boost_1.78.0/boost/functional.hpp:557:74: warning: ‘template&lt;class _Arg1, class _Arg2, class _Result&gt; struct std::binary_function’ is deprecated [-Wdeprecated-declarations]\n  557 |     class pointer_to_binary_function : public boost::functional::detail::binary_function&lt;Arg1,Arg2,Result&gt;\n      |                                                                          ^~~~~~~~~~~~~~~\n/usr/include/c++/13.2.1/bits/stl_function.h:131:12: note: declared here\n  131 |     struct binary_function\n      |            ^~~~~~~~~~~~~~~\n\n\nStart sampling\n\n\nRunning MCMC with 4 chains, at most 8 in parallel...\n\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 1 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 2 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 4 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 3 Iteration:  100 / 2000 [  5%]  (Warmup) \nChain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 2 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 4 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 3 Iteration:  200 / 2000 [ 10%]  (Warmup) \nChain 4 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 4 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 3 Iteration:  300 / 2000 [ 15%]  (Warmup) \nChain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 3 Iteration:  400 / 2000 [ 20%]  (Warmup) \nChain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) \nChain 4 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 4 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 3 Iteration:  600 / 2000 [ 30%]  (Warmup) \nChain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 4 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 3 Iteration:  700 / 2000 [ 35%]  (Warmup) \nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 4 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 3 Iteration:  800 / 2000 [ 40%]  (Warmup) \nChain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 3 Iteration:  900 / 2000 [ 45%]  (Warmup) \nChain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 4 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 4 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 3 Iteration: 1100 / 2000 [ 55%]  (Sampling) \nChain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 4 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 3 Iteration: 1200 / 2000 [ 60%]  (Sampling) \nChain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 4 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 3 Iteration: 1300 / 2000 [ 65%]  (Sampling) \nChain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 3 Iteration: 1400 / 2000 [ 70%]  (Sampling) \nChain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) \nChain 4 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 3 Iteration: 1600 / 2000 [ 80%]  (Sampling) \nChain 4 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 4 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 3 Iteration: 1700 / 2000 [ 85%]  (Sampling) \nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 1 finished in 46.9 seconds.\nChain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 4 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 3 Iteration: 1800 / 2000 [ 90%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 finished in 49.7 seconds.\nChain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 finished in 50.1 seconds.\nChain 3 Iteration: 1900 / 2000 [ 95%]  (Sampling) \nChain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 3 finished in 52.1 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 49.7 seconds.\nTotal execution time: 52.2 seconds.\n\n\nCode\npp_check(model_mrs_90_all, type = \"ecdf_overlay\", ndraws = 500)\n\n\n\n\n\nCode\nmodel_parameters(model_mrs_90_all,\n  centrality = \"mean\", dispersion = TRUE,\n  test = FALSE, verbose = FALSE, ci_method = \"hdi\", priors = TRUE,\n  exponentiate = TRUE\n) |&gt;\n  print(digits = 3, zap_small = TRUE)\n\n\nParameter            |   Mean |    SD |           95% CI |  Rhat |      ESS |                        Prior\n----------------------------------------------------------------------------------------------------------\nIntercept[1]         |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 |                      Uniform\nb_Intercept[1]       |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[1]       |  0.131 | 0.238 | [ 0.082,  0.206] | 0.999 | 6084.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[2]         |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 |                      Uniform\nb_Intercept[2]       |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[2]       |  0.838 | 0.228 | [ 0.532,  1.290] | 0.999 | 6432.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[3]         |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 |                      Uniform\nb_Intercept[3]       |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[3]       |  2.339 | 0.230 | [ 1.517,  3.742] | 0.999 | 6611.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[4]         |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 |                      Uniform\nb_Intercept[4]       |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[4]       |  5.715 | 0.231 | [ 3.630,  8.959] | 0.999 | 6445.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[5]         | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 |                      Uniform\nb_Intercept[5]       | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[5]       | 26.062 | 0.236 | [16.061, 40.191] | 0.999 | 6525.000 | Student_t (df=3) (0 +- 2.50)\nIntercept[6]         | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 |                      Uniform\nb_Intercept[6]       | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 | Student_t (df=3) (0 +- 2.50)\nb_Intercept[6]       | 53.446 | 0.242 | [32.722, 84.248] | 0.999 | 6763.000 | Student_t (df=3) (0 +- 2.50)\nich_lateralityRight  |  1.193 | 0.065 | [ 1.051,  1.355] | 0.999 | 5404.000 |                      Uniform\nage                  |  1.048 | 0.003 | [ 1.043,  1.053] | 0.999 | 5447.000 |                      Uniform\nich_locationLobar    |  0.485 | 0.088 | [ 0.408,  0.572] | 1.001 | 4169.000 |                      Uniform\nich_locationThalamus |  1.826 | 0.079 | [ 1.558,  2.127] | 1.000 | 4870.000 |                      Uniform\nich_volume_baseline  |  1.050 | 0.002 | [ 1.045,  1.054] | 1.000 | 4128.000 |                      Uniform\ngcs_baseline         |  0.831 | 0.013 | [ 0.810,  0.851] | 0.999 | 5210.000 |                      Uniform\nneurosurgery_evacYes |  1.291 | 0.136 | [ 0.988,  1.686] | 1.000 | 5261.000 |                      Uniform"
  }
]